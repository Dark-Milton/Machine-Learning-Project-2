{
  "manifest": {
    "name": "pick-by-alias",
    "version": "1.2.0",
    "description": "Pick properties by aliases",
    "main": "index.js",
    "scripts": {
      "test": "node test"
    },
    "repository": {
      "type": "git",
      "url": "git+ssh://git@github.com/dfcreative/pick-by-alias.git"
    },
    "keywords": [
      "pick",
      "object"
    ],
    "author": {
      "name": "Dima Yv",
      "email": "dfcreative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/dfcreative/pick-by-alias/issues"
    },
    "homepage": "https://github.com/dfcreative/pick-by-alias#readme",
    "devDependencies": {
      "tape": "^4.8.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-pick-by-alias-1.2.0-5f7cb2b1f21a6e1e884a0c87855aa4a37361107b-integrity/node_modules/pick-by-alias/package.json",
    "readmeFilename": "readme.md",
    "readme": "# pick-by-alias [![unstable](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges)\n\nPick object properties by synonyms. Useful to avoid remembering exact option names from user perspective.\n\n[![npm install pick-by-alias](https://nodei.co/npm/pick-by-alias.png?mini=true)](https://npmjs.org/package/pick-by-alias/)\n\n```js\nlet pick = require('pick-by-alias')\n\nlet result = pick({\n  positions: [...],\n  color: 'rgba(0, 100, 200, .75)',\n  viewBox: null,\n  extra: 123\n}, {\n  positions: 'positions points data coordinates',\n  color: 'colors color stroke',\n  viewport: 'viewport viewBox'\n})\n```\n\n### `pick(object, properties, keepRest=false)`\n\nReturn an object with properties picked by the list or dict with aliases. Aliases are matched in priority order, ie. first matching name is picked. Each alias can be an array or a comma/space-separated string.\n\n```js\n// pick by dict\nlet {a, b} = pick(src, {a: ['a', 'b', 'c'], b: 'd e f'})\n\n// pick by list\nlet {c, d, e} = pick(src, ['c', 'd', 'e'])\n\n// pick by string\nlet {f, g} = pick(src, 'f g')\n```\n\n`keepRest` defines if not listed object properties should be transfered to resulting object or discarded.\n\n## Related\n\n* [defined](https://www.npmjs.com/package/defined) − get first non-undefined out of a list of values\n* [update-diff](https://github.com/dfcreative/update-diff) − update object state by mapping diff.\n\n## License\n\n(c) 2017 Dima Yv. MIT License\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pick-by-alias/-/pick-by-alias-1.2.0.tgz#5f7cb2b1f21a6e1e884a0c87855aa4a37361107b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pick-by-alias/-/pick-by-alias-1.2.0.tgz",
    "hash": "5f7cb2b1f21a6e1e884a0c87855aa4a37361107b",
    "integrity": "sha1-X3yysfIabh6ISgyHhVqko3NhEHs=",
    "registry": "npm",
    "packageName": "pick-by-alias",
    "cacheIntegrity": "sha512-ESj2+eBxhGrcA1azgHs7lARG5+5iLakc/6nlfbpjcLl00HuuUOIuORhYXN4D1HfvMSKuVtFQjAlnwi1JHEeDIw== sha1-X3yysfIabh6ISgyHhVqko3NhEHs="
  },
  "registry": "npm",
  "hash": "5f7cb2b1f21a6e1e884a0c87855aa4a37361107b"
}