{
  "manifest": {
    "name": "almost-equal",
    "version": "1.1.0",
    "description": "Test if two floats are almost equal",
    "main": "almost_equal.js",
    "dependencies": {},
    "devDependencies": {
      "tap": "~0.4.1"
    },
    "scripts": {
      "test": "tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/almost-equal.git"
    },
    "keywords": [
      "float",
      "compare",
      "double",
      "round",
      "equal",
      "almost",
      "near",
      "tolerance",
      "epsilon",
      "FLT_EPSILON",
      "DBL_EPSILON"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "bb9919030f650a6b1b5a9f0f65c406055146d259",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-almost-equal-1.1.0-f851c631138757994276aa2efbe8dfa3066cccdd-integrity/node_modules/almost-equal/package.json",
    "readme": "almost-equal\n============\nChecks when two floats are almost equal.\n\nUse\n===\nFirst install using npm:\n\n    npm install almost-equal\n    \nThen use as follows:\n\n```javascript\nvar almostEqual = require(\"almost-equal\")\n\nvar a = 100\n  , b = 100 + 1e-12\n\n//Check if a == b up to float precision\nconsole.log(almostEqual(a, b, almostEqual.FLT_EPSILON, almostEqual.FLT_EPSILON))\n\n//Check if a == b up to double precision\nconsole.log(almostEqual(a, b, almostEqual.DBL_EPSILON, almostEqual.DBL_EPSILON))\n```\n\n### `almostEqual(a, b[, absoluteTolerance [, relativeTolerance]])`\nChecks if two floats are within the given tolerances of one another using the formula:\n\n    |a - b| < max(absoluteTolerance, min(|a|, |b|) * relativeTolerance)\n\n* `a` and `b` are the two numbers to comapre\n* `absoluteTolerance` is a fixed minimal tolerance (set to 0 to ignore)\n* `relativeTolerance` is a tolerance that scales with a/b (set to 0 to ignore)\n\n**Returns** `true` if `a` and `b` are approximately equal.\n\nIf tolerance argument is omitted, `almostEqual.DBL_EPSILON` value is used by default.\n\n### `almostEqual.FLT_EPSILON`\nFloating point (32-bit) epsilon\n\n### `almostEqual.DBL_EPSILON`\nDouble precision (64-bit) epsilon\n\nCredits\n=======\n(c) 2013 Mikola Lysenko. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/almost-equal/-/almost-equal-1.1.0.tgz#f851c631138757994276aa2efbe8dfa3066cccdd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/almost-equal/-/almost-equal-1.1.0.tgz",
    "hash": "f851c631138757994276aa2efbe8dfa3066cccdd",
    "integrity": "sha1-+FHGMROHV5lCdqou++jfowZszN0=",
    "registry": "npm",
    "packageName": "almost-equal",
    "cacheIntegrity": "sha512-0V/PkoculFl5+0Lp47JoxUcO0xSxhIBvm+BxHdD/OgXNmdRpRHCFnKVuUoWyS9EzQP+otSGv0m9Lb4yVkQBn2A== sha1-+FHGMROHV5lCdqou++jfowZszN0="
  },
  "registry": "npm",
  "hash": "f851c631138757994276aa2efbe8dfa3066cccdd"
}