{
  "manifest": {
    "name": "to-array-buffer",
    "version": "3.2.0",
    "description": "Convert any binary data to ArrayBuffer",
    "main": "index.js",
    "scripts": {
      "test": "node test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dy/to-array-buffer.git"
    },
    "keywords": [
      "arraybuffer",
      "array-buffer",
      "array",
      "buffer",
      "binary",
      "load",
      "raw",
      "load raw",
      "data",
      "blob",
      "file"
    ],
    "author": {
      "name": "Dima Yv",
      "email": "dfcreative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/dy/to-array-buffer/issues"
    },
    "homepage": "https://github.com/dy/to-array-buffer#readme",
    "dependencies": {
      "flatten-vertex-data": "^1.0.2",
      "is-blob": "^2.0.1",
      "string-to-arraybuffer": "^1.0.0"
    },
    "devDependencies": {
      "buffer-to-arraybuffer": "^0.0.4",
      "data-uri-to-buffer": "^1.0.0",
      "is-browser": "^2.0.1",
      "ndarray": "^1.0.18",
      "tape": "^4.6.3"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-to-array-buffer-3.2.0-cb684dd691a7368c3b249c2348d75227f7d4dbb4-integrity/node_modules/to-array-buffer/package.json",
    "readmeFilename": "readme.md",
    "readme": "# to-array-buffer [![unstable](https://img.shields.io/badge/stability-unstable-orange.svg)](http://github.com/badges/stability-badges) [![Build Status](https://img.shields.io/travis/dy/to-array-buffer.svg)](https://travis-ci.org/dy/to-array-buffer)\n\nTurn any binary data container into an _ArrayBuffer_ in sync way. Detected containers:\n\n* Buffer\n* TypedArray\n* ArrayBufferView\n* ArrayBuffer\n* data-uri string\n* base64 string\n* plain string\n* Array\n* Array of Arrays\n* Number (creates new ArrayBuffer of the defined length in bytes)\n* etc.\n\nIt also handles some custom data types, like `ImageData`, `AudioBuffer` etc., but in general it returns `null` for objects not looking like binary data containers. Note also that it does not handle _Blob_ and _File_, since they require async API.\n\n[![npm install to-array-buffer](https://nodei.co/npm/to-array-buffer.png?mini=true)](https://npmjs.org/package/to-array-buffer/)\n\n```js\nvar toArrayBuffer = require('to-array-buffer')\nvar context = require('audio-context')\n\n// Get array buffer from any object\nab = toArrayBuffer(new Buffer(100))\nab = toArrayBuffer(new Float32Array(12))\nab = toArrayBuffer(dataURIstr)\nab = toArrayBuffer(base64str)\nab = toArrayBuffer(ndarray)\nab = toArrayBuffer([[0, 1, 0], [1, 0, 1]])\n```\n\n### Related\n\n* [to-arraybuffer](https://www.npmjs.com/package/to-arraybuffer) − convert Buffer to ArrayBuffer, fast implementation.\n* [data-uri-to-buffer](https://npmjs.org/package/data-uri-to-buffer) − advanced data-uri decoder.\n* [save-file](https://github.com/dy/save-file) — save any input data to file in node/browser.\n* [buffer-to-arraybuffer](https://npmjs.org/package/buffer-to-arraybuffer) — convert surely known Buffer datatype to ArrayBuffer.\n\n© Dmitry Yv 2018. MIT Licensed.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/to-array-buffer/-/to-array-buffer-3.2.0.tgz#cb684dd691a7368c3b249c2348d75227f7d4dbb4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/to-array-buffer/-/to-array-buffer-3.2.0.tgz",
    "hash": "cb684dd691a7368c3b249c2348d75227f7d4dbb4",
    "integrity": "sha512-zN33mwi0gpL+7xW1ITLfJ48CEj6ZQW0ZAP0MU+2W3kEY0PAIncyuxmD4OqkUVhPAbTP7amq9j/iwvZKYS+lzSQ==",
    "registry": "npm",
    "packageName": "to-array-buffer",
    "cacheIntegrity": "sha512-zN33mwi0gpL+7xW1ITLfJ48CEj6ZQW0ZAP0MU+2W3kEY0PAIncyuxmD4OqkUVhPAbTP7amq9j/iwvZKYS+lzSQ== sha1-y2hN1pGnNow7JJwjSNdSJ/fU27Q="
  },
  "registry": "npm",
  "hash": "cb684dd691a7368c3b249c2348d75227f7d4dbb4"
}