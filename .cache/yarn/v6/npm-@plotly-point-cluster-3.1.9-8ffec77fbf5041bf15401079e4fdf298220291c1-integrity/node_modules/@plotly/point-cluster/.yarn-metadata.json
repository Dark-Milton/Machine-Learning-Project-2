{
  "manifest": {
    "name": "@plotly/point-cluster",
    "version": "3.1.9",
    "description": "Fast nd point clustering.",
    "main": "index.js",
    "scripts": {
      "test": "node test",
      "build": "browserify demo.js -g bubleify | indexhtmlify | metadataify | github-cornerify > demo/index.html"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/plotly/point-cluster.git"
    },
    "keywords": [
      "snap-points-2d",
      "supercluster",
      "quadtree",
      "quad-tree",
      "kdtree",
      "kd-tree",
      "ann-tree",
      "point",
      "scatter",
      "point2d",
      "2d",
      "cluster",
      "clustering",
      "geospatial",
      "markers",
      "round",
      "data",
      "vis",
      "gl-vis"
    ],
    "browserify": {
      "transform": [
        "bubleify"
      ]
    },
    "author": {
      "name": "Dmitry Yv",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "dependencies": {
      "array-bounds": "^1.0.1",
      "binary-search-bounds": "^2.0.4",
      "clamp": "^1.0.1",
      "defined": "^1.0.0",
      "dtype": "^2.0.0",
      "flatten-vertex-data": "^1.0.2",
      "is-obj": "^1.0.1",
      "math-log2": "^1.0.1",
      "parse-rect": "^1.2.0",
      "pick-by-alias": "^1.2.0"
    },
    "devDependencies": {
      "almost-equal": "^1.1.0",
      "bubleify": "^2.0.0",
      "canvas-fit": "^1.5.0",
      "gauss-random": "^1.0.1",
      "math-float64-from-bits": "^1.0.0",
      "snap-points-2d": "^3.2.0",
      "tape": "^4.8.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-@plotly-point-cluster-3.1.9-8ffec77fbf5041bf15401079e4fdf298220291c1-integrity/node_modules/@plotly/point-cluster/package.json",
    "readmeFilename": "README.md",
    "readme": "# point-cluster [![Build Status](https://travis-ci.org/dy/point-cluster.svg?branch=master)](https://travis-ci.org/dy/point-cluster) [![experimental](https://img.shields.io/badge/stability-experimental-yellow.svg)](http://github.com/badges/stability-badges)\n\nPoint clustering for 2D spatial indexing. Incorporates optimized quad-tree data structure.\n\n<!--\n* [ ] quad-tree, kd-tree, ann-tree and other tree types.\n* [x] splatting by zoom layers.\n* [x] point selection/hover by range.\n* [ ] point radius and weight.\n* [ ] reverse z-index order mode to keep visible points in reclustering.\n* [ ] appending/removing points.\n* [x] no visually noticeable clustering artifacts.\n* [x] high performance (faster than [snap-points-2d](https://github.com/gl-vis/snap-points-2d)).\n* [x] no memory overuse.\n\n[DEMO](https://github.com/dy/point-cluster)\n-->\n\n\n```js\nconst cluster = require('point-cluster')\n\nlet ids = cluster(points)\n\n// get point ids in the indicated range\nlet selectedIds = ids.range([10, 10, 20, 20])\n\n// get levels of details: list of ids subranges for rendering purposes\nlet lod = ids.range([10, 10, 20, 20], { lod: true })\n```\n\n## API\n\n### `ids = cluster(points, options?)`\n\nCreate index for the set of 2d `points` based on `options`.\n\n* `points` is an array of `[x,y, x,y, ...]` or `[[x,y], [x,y], ...]` coordinates.\n* `ids` is _Uint32Array_ with point ids sorted by zoom levels, suitable for WebGL buffer, subranging or alike.\n* `options`\n\nOption | Default | Description\n---|---|---\n`bounds` | `'auto'` | Data range, if different from `points` bounds, eg. in case of subdata.\n`depth` | `256` | Max number of levels. Points below the indicated level are grouped into single level.\n`output` | `'array'` | Output data array or data format. For available formats see [dtype](https://npmjs.org/package/dtype).\n<!-- `node` | `1` | Min size of node, ie. tree traversal is stopped once the node contains less than the indicated number of points. -->\n<!-- `sort` | `'z'` | Sort values within levels by `x`-, `y`-coordinate, `z`-curve or `r` - point radius. `z` is the fastest for init, `x` or `y` are faster for `lod` and `r` is the most data-relevant. -->\n<!-- `pick` | `'first'` | `'first'`, `'last'` or a function, returning point id for the level. -->\n\n---\n\n\n### `result = ids.range(box?, options?)`\n\nGet point ids from the indicated range.\n\n* `box` can be any rectangle object, eg. `[l, t, r, b]`, see [parse-rect](https://github.com/dy/parse-rect).\n* `options`\n\nOption | Default | Description\n---|---|---\n`lod` | `false` | Makes result a list of level details instead of ids, useful for obtaining subranges to render.\n`px` | `0` | Min pixel size in data dimension (number or `[width, height]` couple) to search for, to ignore lower levels.\n`level` | `null` | Max level to limit search.\n\n```js\nlet levels = ids.range([0,0, 100, 100], { lod: true, d: dataRange / canvas.width })\n\nlevels.forEach([from, to] => {\n\t// offset and count point to range in `ids` array\n\trender( ids.subarray( from, to ) )\n})\n```\n\n\n### Related\n\n* [snap-points-2d](https://github.com/gl-vis/snap-points-2d) − grouping points by pixels.\n* [kdgrass](https://github.com/dy/kdgrass) − minimal kd-tree implementation.\n* [regl-scatter2d](https://github.com/dfreative/regl-scatter2d) − highly performant scatter2d plot.\n\n\n## License\n\n© 2017 Dmitry Yv. MIT License\n\nDevelopment supported by [plot.ly](https://github.com/plotly/).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@plotly/point-cluster/-/point-cluster-3.1.9.tgz#8ffec77fbf5041bf15401079e4fdf298220291c1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@plotly/point-cluster/-/point-cluster-3.1.9.tgz",
    "hash": "8ffec77fbf5041bf15401079e4fdf298220291c1",
    "integrity": "sha512-MwaI6g9scKf68Orpr1pHZ597pYx9uP8UEFXLPbsCmuw3a84obwz6pnMXGc90VhgDNeNiLEdlmuK7CPo+5PIxXw==",
    "registry": "npm",
    "packageName": "@plotly/point-cluster",
    "cacheIntegrity": "sha512-MwaI6g9scKf68Orpr1pHZ597pYx9uP8UEFXLPbsCmuw3a84obwz6pnMXGc90VhgDNeNiLEdlmuK7CPo+5PIxXw== sha1-j/7Hf79QQb8VQBB55P3ymCICkcE="
  },
  "registry": "npm",
  "hash": "8ffec77fbf5041bf15401079e4fdf298220291c1"
}