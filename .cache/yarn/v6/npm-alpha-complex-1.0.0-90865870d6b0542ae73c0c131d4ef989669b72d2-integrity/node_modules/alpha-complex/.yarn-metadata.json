{
  "manifest": {
    "name": "alpha-complex",
    "version": "1.0.0",
    "description": "Computes the alpha complex of a point set in any dimension",
    "main": "alpha.js",
    "dependencies": {
      "circumradius": "^1.0.0",
      "delaunay-triangulate": "^1.1.6"
    },
    "devDependencies": {
      "canvas-fit": "^1.2.0",
      "planar-graph-to-svg": "^1.0.0",
      "simplicial-complex": "^1.0.0",
      "mouse-change": "^1.1.1"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mikolalysenko/alpha-complex.git"
    },
    "keywords": [
      "alpha",
      "shape",
      "complex",
      "simplicial",
      "complex",
      "point",
      "surface",
      "reconstruction"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mikolalysenko/alpha-complex/issues"
    },
    "homepage": "https://github.com/mikolalysenko/alpha-complex",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-alpha-complex-1.0.0-90865870d6b0542ae73c0c131d4ef989669b72d2-integrity/node_modules/alpha-complex/package.json",
    "readmeFilename": "README.md",
    "readme": "alpha-complex\n=============\n[Alpha shapes](http://en.wikipedia.org/wiki/Alpha_shape) are a generalization of Delaunay triangulations.  Given a parameter `alpha` and a point set, they compute a simplicial complex which covers the point set in simplices whose circum radii are less than `1/alpha`.\n\n[To see this in action, try out the demo](https://mikolalysenko.github.io/alpha-complex/index.html)\n\n<img src=\"alpha.png\"></img>\n\n# Example\n\n```javascript\nvar alphaComplex = require('alpha-complex')\n\nvar points = []\nfor(var i=0; i<100; ++i) {\n  points.push([Math.random(), Math.random()])\n}\n\nconsole.log(alphaComplex(0.1, points))\n```\n\n# Install\n\nThis module works in node.js/iojs/browserify and supports point sets in any dimension.\n\n```\nnpm i alpha-complex\n```\n\n# API\n\n#### `var cells = require('alpha-complex')(alpha, points)`\nConstructs the alpha complex of the given set of points.\n\n* `alpha` is the curvature of the alpha complex\n* `points` is a list of points encoded as arrays\n\n**Returns** The alpha-complex of the point set.\n\n# License\n(c) 2015 Mikola Lysenko. MIT License",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2015 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/alpha-complex/-/alpha-complex-1.0.0.tgz#90865870d6b0542ae73c0c131d4ef989669b72d2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/alpha-complex/-/alpha-complex-1.0.0.tgz",
    "hash": "90865870d6b0542ae73c0c131d4ef989669b72d2",
    "integrity": "sha1-kIZYcNawVCrnPAwTHU75iWabctI=",
    "registry": "npm",
    "packageName": "alpha-complex",
    "cacheIntegrity": "sha512-rhsjKfc9tMF5QZc0NhKz/zFzMu2rvHxCP/PyJtEmMkV7M848YjIoQGDlNGp+vTqxXjA8wAY2OxgR1K54C2Awkg== sha1-kIZYcNawVCrnPAwTHU75iWabctI="
  },
  "registry": "npm",
  "hash": "90865870d6b0542ae73c0c131d4ef989669b72d2"
}