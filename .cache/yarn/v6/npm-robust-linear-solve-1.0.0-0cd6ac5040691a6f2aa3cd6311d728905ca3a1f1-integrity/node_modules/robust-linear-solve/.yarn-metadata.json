{
  "manifest": {
    "name": "robust-linear-solve",
    "version": "1.0.0",
    "description": "Exactly solve a low dimensional linear system",
    "main": "linsolve.js",
    "dependencies": {
      "robust-determinant": "^1.1.0"
    },
    "devDependencies": {
      "robust-compare": "^1.0.0",
      "robust-compress": "^1.0.0",
      "robust-scale": "^1.0.2",
      "robust-sum": "^1.0.0",
      "validate-robust-sequence": "^1.0.0",
      "tape": "^2.12.3"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/robust-linear-solve.git"
    },
    "keywords": [
      "linear",
      "solve",
      "robust",
      "exact",
      "arithmetic"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mikolalysenko/robust-linear-solve/issues"
    },
    "homepage": "https://github.com/mikolalysenko/robust-linear-solve",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-robust-linear-solve-1.0.0-0cd6ac5040691a6f2aa3cd6311d728905ca3a1f1-integrity/node_modules/robust-linear-solve/package.json",
    "readmeFilename": "README.md",
    "readme": "robust-linear-solve\n===================\nAn exact linear solver for low dimensional systems.\n\n# Example\n\n```javascript\nvar linSolve = require(\"robust-linear-solve\")\n\nvar A = [ [1, 2, 3],\n          [3, 2, 1],\n          [0, 0, 1] ]\n\nvar b = [1, 2, 3]\n\nconsole.log(linSolve(A, b))\n```\n\nOutput:\n\n```javascript\n[ [ -14 ], [ 23 ], [ -12 ], [ -4 ] ]\n```\n\n# Install\n\n```\nnpm install robust-linear-solve\n```\n\n# API\n\n#### `require(\"robust-linear-solve\")(A, b)`\nFinds the exact solution to a linear system, `Ax = b`, using Cramer's rule.\n\n* `A` is a `n`-by-`n` square matrix, encoded as an array of arrays\n* `b` is an `n` dimensional vector encoded as a length `n` array\n\n**Returns** A projective `n+1` dimensional vector of non-overlapping increasing sequences representing the exact solution to the system.  That is to say, if `x` is the returned solution then in psuedocode we have the following constraint:\n\n`A [ x[0], x[1], ... ,  x[n-1] ] =  b * x[n]`\n\nOr in other words, the solution is given by the quotient:\n\n`[ x[0] / x[n], x[1] / x[n], .... , x[n-1] / x[n] ]`\n\nIf the system is not solvable, then the last coefficient, `x[n]` will be `0`.\n\n**Note** For up to `n=5`, you can avoid the extra method look up by calling `linSolve[n]` directly.\n\n# Credits\n(c) 2014 Mikola Lysenko. MIT License",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/robust-linear-solve/-/robust-linear-solve-1.0.0.tgz#0cd6ac5040691a6f2aa3cd6311d728905ca3a1f1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/robust-linear-solve/-/robust-linear-solve-1.0.0.tgz",
    "hash": "0cd6ac5040691a6f2aa3cd6311d728905ca3a1f1",
    "integrity": "sha1-DNasUEBpGm8qo81jEdcokFyjofE=",
    "registry": "npm",
    "packageName": "robust-linear-solve",
    "cacheIntegrity": "sha512-I1qW8Bl9+UYeGNh2Vt8cwkcD74xWMyjnU6lSVcZrf0eyfwPmreflY3v0SvqCZOj5ddxnSS1Xp31igbFNcg1TGQ== sha1-DNasUEBpGm8qo81jEdcokFyjofE="
  },
  "registry": "npm",
  "hash": "0cd6ac5040691a6f2aa3cd6311d728905ca3a1f1"
}