{
  "manifest": {
    "name": "elementary-circuits-directed-graph",
    "version": "1.3.1",
    "description": "Finds all elementary circuits of a directed graph using Johnson's algorithm (1975)",
    "main": "johnson.js",
    "scripts": {
      "test": "tape test/*.js",
      "lint": "eslint ."
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/antoinerg/elementary-circuits-directed-graph.git"
    },
    "author": {
      "name": "Antoine Roy-Gobeil"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/antoinerg/elementary-circuits-directed-graph/issues"
    },
    "homepage": "https://github.com/antoinerg/elementary-circuits-directed-graph#readme",
    "dependencies": {
      "strongly-connected-components": "^1.0.1"
    },
    "devDependencies": {
      "eslint": "^5.13.0",
      "tape": "^4.9.2"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-elementary-circuits-directed-graph-1.3.1-31c5a1c69517de833127247e5460472168e9e1c1-integrity/node_modules/elementary-circuits-directed-graph/package.json",
    "readmeFilename": "README.md",
    "readme": "# elementary-circuits-directed-graph\n\nAn implementation of the Johnson's circuit finding algorithm [1].\n\n[1] Donald B. Johnson, Finding all the elementary circuits of a directed\n    graph, SIAM Journal on Computing, 1975.\n\n## Example\n\n```javascript\nvar findCircuits = require(\"elementary-circuits-directed-graph\");\n\n//       V4      V2\n// +-<---o---<---o---<--+\n// |             |      |\n// o V0          ^      o V3\n// |           V1|      |\n// +------>------o--->--+\n\nvar adjacencyList = [\n  [1],\n  [2, 3],\n  [4],\n  [2],\n  [0]\n]\n\nconsole.log(findCircuits(adjacencyList))\n\n// returns [[0, 1, 2, 4, 0], [0, 1, 3, 2, 4, 0]]\n```\n\nOptionally, one can define a callback to manage the result.\n```javascript\n// reusing the same adjacencyList as before\nvar counter = 0;\nfunction increment() {\n    counter += 1;\n}\nfindCircuits(adjacencyList, increment);\nconsole.log(counter)\n\n// return 2\n```\nThis is especially useful if there are too many elementary circuits\nto store in memory. Using a callback, they can be saved to disk instead.\n\n## Install\n\nnpm install elementary-circuits-directed-graph\n\n## API\n\n### `require(\"elementary-circuits-directed-graph\")(adjacencyList, callback)`\nFinds all the elementary circuits of a directed graph using\n\n* `adjacencyList` is an array of lists representing the directed edges of the graph\n* `callback` is an optional function that will be called each time an elementary circuit is found.\n\n**Returns** An array of arrays representing the elementary circuits if no callback was defined.\n\n## Credits\n(c) 2018 Antoine Roy-Gobeil. MIT License.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019 Antoine Roy-Gobeil\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/elementary-circuits-directed-graph/-/elementary-circuits-directed-graph-1.3.1.tgz#31c5a1c69517de833127247e5460472168e9e1c1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/elementary-circuits-directed-graph/-/elementary-circuits-directed-graph-1.3.1.tgz",
    "hash": "31c5a1c69517de833127247e5460472168e9e1c1",
    "integrity": "sha512-ZEiB5qkn2adYmpXGnJKkxT8uJHlW/mxmBpmeqawEHzPxh9HkLD4/1mFYX5l0On+f6rcPIt8/EWlRU2Vo3fX6dQ==",
    "registry": "npm",
    "packageName": "elementary-circuits-directed-graph",
    "cacheIntegrity": "sha512-ZEiB5qkn2adYmpXGnJKkxT8uJHlW/mxmBpmeqawEHzPxh9HkLD4/1mFYX5l0On+f6rcPIt8/EWlRU2Vo3fX6dQ== sha1-McWhxpUX3oMxJyR+VGBHIWjp4cE="
  },
  "registry": "npm",
  "hash": "31c5a1c69517de833127247e5460472168e9e1c1"
}