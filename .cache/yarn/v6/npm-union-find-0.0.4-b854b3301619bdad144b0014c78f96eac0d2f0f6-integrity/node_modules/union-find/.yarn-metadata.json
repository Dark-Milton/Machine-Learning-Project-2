{
  "manifest": {
    "name": "union-find",
    "version": "0.0.4",
    "description": "A union-find data structure for maintaining disjoint sets.",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/union-find.git"
    },
    "keywords": [
      "union",
      "find",
      "link",
      "disjoint",
      "set",
      "connected",
      "component",
      "graph"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "8fbd75feecd9d7154f4c2ff21754f483ad07ccab",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-union-find-0.0.4-b854b3301619bdad144b0014c78f96eac0d2f0f6-integrity/node_modules/union-find/package.json",
    "readme": "`union-find`\n==========\n\nA basic union-find data structure for node.js.  For more information, see wikipdia:\n\n[Disjoint Set Datastructures](http://en.wikipedia.org/wiki/Disjoint-set_data_structure)\n\n\nUsage\n=====\nHere is an example showing how to do connected component labelling.  Assume we are given a graph with `VERTEX_COUNT` vertices and a list of edges stored in array represented by pairs of vertex indices:\n\n    //Import data structure\n    var UnionFind = require('union-find');\n    \n    //Link all the nodes together\n    var forest = new UnionFind(VERTEX_COUNT);\n    for(var i=0; i<edges.length; ++i) {\n      forest.link(edges[i][0], edges[i][1]);\n    }\n    \n    //Label components\n    var labels = new Array(VERTEX_COUNT);\n    for(var i=0; i<VERTEX_COUNT; ++i) {\n      labels[i] = forest.find(i);\n    }\n\nInstallation\n============\n\n    npm install union-find\n    \n    \nAcknowledgements\n================\n(c) 2013 Mikola Lysenko.  MIT License\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/union-find/-/union-find-0.0.4.tgz#b854b3301619bdad144b0014c78f96eac0d2f0f6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/union-find/-/union-find-0.0.4.tgz",
    "hash": "b854b3301619bdad144b0014c78f96eac0d2f0f6",
    "integrity": "sha1-uFSzMBYZva0USwAUx4+W6sDS8PY=",
    "registry": "npm",
    "packageName": "union-find",
    "cacheIntegrity": "sha512-207oken6EyGDCBK5l/LTPsWfgy8N8s6idwRK2TG0ssWhzPlxEDdBA8nIV+eLbkEMdA8pAwE8F7/xwv2sCESVjQ== sha1-uFSzMBYZva0USwAUx4+W6sDS8PY="
  },
  "registry": "npm",
  "hash": "b854b3301619bdad144b0014c78f96eac0d2f0f6"
}