{
  "manifest": {
    "name": "regl-line2d",
    "version": "3.1.2",
    "description": "Draw polyline with regl",
    "main": "index.js",
    "scripts": {
      "postshrinkwrap": "chttps .",
      "test": "budo test",
      "build": "browserify test.js -g bubleify | indexhtmlify | metadataify | github-cornerify | mobilify > index.html"
    },
    "browserify": {
      "transform": [
        "glslify",
        "bubleify"
      ]
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dy/regl-line2d.git"
    },
    "keywords": [
      "regl",
      "line2d",
      "gl-vis",
      "gl",
      "webgl",
      "polyline",
      "plotly"
    ],
    "author": {
      "name": "Dima Yv",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/dy/regl-line2d/issues"
    },
    "homepage": "https://github.com/dy/regl-line2d#readme",
    "dependencies": {
      "array-bounds": "^1.0.1",
      "array-normalize": "^1.1.4",
      "color-normalize": "^1.5.0",
      "earcut": "^2.1.5",
      "es6-weak-map": "^2.0.3",
      "flatten-vertex-data": "^1.0.2",
      "glslify": "^7.0.0",
      "object-assign": "^4.1.1",
      "parse-rect": "^1.2.0",
      "pick-by-alias": "^1.2.0",
      "to-float32": "^1.1.0",
      "array-find-index": "^1.0.2"
    },
    "devDependencies": {
      "adaptive-bezier-curve": "^1.0.3",
      "arc-to": "^1.0.1",
      "array-fill": "^1.2.0",
      "array-from": "^2.1.1",
      "bubleify": "^2.0.0",
      "canvas-fit": "^1.5.0",
      "chttps": "^1.0.6",
      "color-rgba": "^2.1.1",
      "enable-mobile": "^1.0.7",
      "fps-indicator": "^1.1.0",
      "gauss-random": "^1.0.1",
      "mobilify": "^1.0.1",
      "nanoraf": "^3.0.1",
      "next-pow-2": "^1.0.0",
      "nice-color-palettes": "^2.0.0",
      "pan-zoom": "^3.4.1",
      "regl": "^1.3.11",
      "regl-scatter2d": "^3.1.5",
      "tape": "^4.8.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-regl-line2d-3.1.2-2bedef7f44c1f7fae75c90f9918258723ca84c1c-integrity/node_modules/regl-line2d/package.json",
    "readmeFilename": "readme.md",
    "readme": "# regl-line2d [![experimental](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges)\n\nDraw polyline with regl.\n\n![regl-line2d](https://github.com/dy/regl-line2d/blob/master/preview.png?raw=true)\n\nRemake on [gl-line2d](https://github.com/gl-vis/gl-line2d):\n\n* GPU join calculation.\n* Bevel, round and rectangular joins.\n* Dash patterns.\n* Self-overlapping and sharp angles cases.\n* Multiline rendering.\n* Float64 precision.\n* [`<polyline>`](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline)-compatible API\n\n[Demo](https://a-vis.github.io/regl-line2d).\n\n## Usage\n\n[![npm install regl-line2d](https://nodei.co/npm/regl-line2d.png?mini=true)](https://npmjs.org/package/regl-line2d/)\n\n```js\nlet regl = require('regl')({extensions: 'angle_instanced_arrays'})\nlet line2d = require('regl-line2d')(regl)\n\n// draw red triangle\nline2d.render({ thickness: 4, points: [0,0, 1,1, 1,0], close: true, color: 'red' })\n```\n\n### `line2d.render(options|list?)`\n\nDraw line or multiple lines and update options, once per frame at most.\n\nOption | Default | Description\n---|---|---\n`positions`, `points`, `data` | `[]` | Point coordinates, eg. `[0,0, 1,1, 0,2, 1,-1]` or `[[0,0], [1,1], [0,2], [1,-1]]`.\n`color`, `colors`, `stroke` | `black` | CSS color string or an array with `0..1` values, eg. `'red'` or `[0, 0, 0, 1]`.\n`fill` | `null` | Fill area enclosed by line with defined color.\n`opacity` | `1` | Line transparency regardless of color.\n`thickness`, `lineWidth`, `width`, `strokeWidth` | `1` | Line width in px.\n`dashes`, `dash`, `dasharray` | `null` | Array with dash lengths in px, altering color/space pairs, ie. `[2,10, 5,10, ...]`. `null` corresponds to solid line.\n`join`, `type` | `bevel` | Join style: `'rect'`, `'round'`, `'bevel'`. Applied to caps too.\n`miterLimit` | `1` | Max ratio of the join length to the thickness.\n`close`, `closed`, `closePath` | `false` | Connect last point with the first point with a segment.\n`overlay` | `false` | Enable overlay of line segments.\n`range`, `dataBox` | `null` | Visible data range.\n`viewport`, `viewBox` | `null` | Area within canvas, an array `[left, top, right, bottom]` or an object `{x, y, w, h}` or `{left, top, bottom, right}`.\n\nTo render multiple lines pass an array with options for every line as `list`:\n\n```js\nline2d.render([\n  {thickness: 2, points: [0,0, 1,1], color: 'blue'},\n  {thickness: 2, points: [0,1, 1,0], color: 'blue'}\n])\n```\n\n`null` argument will destroy `line2d` instance and dispose resources.\n\n### `line2d.update(options|list)`\n\nUpdate line(s) not incurring redraw.\n\n### `line2d.draw(id?)`\n\nDraw lines from last updated options. `id` integer can specify a single line from the `list` to redraw.\n\n### `line2d.destroy()`\n\nDispose `line2d` and associated resources.\n\n\n## Related\n\n* [regl-scatter2d](https://github.com/dy/regl-scatter2d)\n* [regl-error2d](https://github.com/dy/regl-error2d)\n\n## Similar\n\n* [regl-line-builder](https://github.com/jpweeks/regl-line-builder)\n* [instanced-lines-demos](https://github.com/wwwtyro/instanced-lines-demos)\n\n## License\n\n(c) 2017 Dima Yv. MIT License\n\nDevelopment supported by [plot.ly](https://github.com/plotly/).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/regl-line2d/-/regl-line2d-3.1.2.tgz#2bedef7f44c1f7fae75c90f9918258723ca84c1c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/regl-line2d/-/regl-line2d-3.1.2.tgz",
    "hash": "2bedef7f44c1f7fae75c90f9918258723ca84c1c",
    "integrity": "sha512-nmT7WWS/WxmXAQMkgaMKWXaVmwJ65KCrjbqHGOUjjqQi6shfT96YbBOvelXwO9hG7/hjvbzjtQ2UO0L3e7YaXQ==",
    "registry": "npm",
    "packageName": "regl-line2d",
    "cacheIntegrity": "sha512-nmT7WWS/WxmXAQMkgaMKWXaVmwJ65KCrjbqHGOUjjqQi6shfT96YbBOvelXwO9hG7/hjvbzjtQ2UO0L3e7YaXQ== sha1-K+3vf0TB9/rnXJD5kYJYcjyoTBw="
  },
  "registry": "npm",
  "hash": "2bedef7f44c1f7fae75c90f9918258723ca84c1c"
}