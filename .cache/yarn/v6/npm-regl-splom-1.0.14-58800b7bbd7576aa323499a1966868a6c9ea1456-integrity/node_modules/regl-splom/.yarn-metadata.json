{
  "manifest": {
    "name": "regl-splom",
    "version": "1.0.14",
    "description": "Scatterplot matrix for 2d plots",
    "main": "./index.js",
    "scripts": {
      "postshrinkwrap": "chttps .",
      "test": "budo --force-default-index test",
      "build": "browserify test.js -g bubleify | indexhtmlify | metadataify | github-cornerify | mobilify > index.html"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/gl-vis/regl-splom.git"
    },
    "keywords": [
      "regl",
      "plotly",
      "splom",
      "scatter",
      "matrix",
      "scattermatrix",
      "gl",
      "webgl",
      "plot",
      "scatterplot"
    ],
    "browserify": {
      "transform": [
        "bubleify"
      ]
    },
    "author": {
      "name": "Dmitry Yv",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gl-vis/regl-splom/issues"
    },
    "homepage": "https://github.com/gl-vis/regl-splom#readme",
    "dependencies": {
      "array-bounds": "^1.0.1",
      "array-range": "^1.0.1",
      "color-alpha": "^1.0.4",
      "flatten-vertex-data": "^1.0.2",
      "parse-rect": "^1.2.0",
      "pick-by-alias": "^1.2.0",
      "raf": "^3.4.1",
      "regl-scatter2d": "^3.2.3"
    },
    "devDependencies": {
      "@plotly/point-cluster": "^3.1.9",
      "bubleify": "^2.0.0",
      "chttps": "^1.0.6",
      "defined": "^1.0.0",
      "fps-indicator": "^1.3.0",
      "gauss-random": "^1.0.1",
      "glslify": "^7.0.0",
      "nice-color-palettes": "^2.0.0",
      "pan-zoom": "^3.4.0",
      "point-cluster": "^3.1.8",
      "regl": "^1.3.11",
      "settings-panel": "^1.8.17"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-regl-splom-1.0.14-58800b7bbd7576aa323499a1966868a6c9ea1456-integrity/node_modules/regl-splom/package.json",
    "readmeFilename": "readme.md",
    "readme": "# regl-splom\n\nMatrix of scatter plots. A wrapper over [regl-scatter2d](https://github.com/dy/regl-scatter2d) for optimized intersected data rendering.\n\n* [x] minimal GPU memory footprint: N vs N*N in direct [regl-scatter2d](https://github.com/dy/regl-scatter2d) passes case.\n* [ ] optimized performance due to binary trees for 1d point clustering, opposed to default 2d quad clustering.\n\n\n## Usage\n\n[![npm install regl-splom](https://nodei.co/npm/regl-splom.png?mini=true)](https://npmjs.org/package/regl-splom/)\n\n```js\nlet regl = require('regl')({extensions: 'oes_element_index_uint'})\nlet createMatrix = require('regl-splom')\n\nlet scatterMatrix = createMatrix(regl)\n\n// pass data and views to display\nscatterMatrix.update(\n\t{ data: [[], [], ...], ranges, domains, viewport, size, color, border },\n\t{ data: [[], [], ...], ranges, domains, viewport, size, color, border }\n)\n\n// draw views by ids\nscatterMatrix.draw(0, 1, ...views)\n```\n\n## API\n\n### `splom = createSplom(regl)`\n\nCreates scatter matrix instance.\n\n### `splom.update(trace1, trace2, ...traces)`\n\nDefine passes for `draw` method. Every trace can include the following options:\n\nOption | Description\n---|---\n`data` | An array with arrays for the columns.\n`range` | Array with data ranges corresponding to `data`. Every range can be an array `[min, max]` or `[minX, minY, maxX, maxY]`. If undefined - detected automatically.\n`domain` | Array with domains for the data, ie. the area data dimension holds  within the `viewport`. Each domain can be an array `[min, max]` for symmetric placement or `[minX, minY, maxX, maxY]` for precise position. Domain values are from `0..1` interval, defining what area of the `viewport` a dimension holds. By default domains cover viewport evnely.\n`padding` | Padding within domains (in px), or list of paddings per-domain. By default `[0,0,0,0]`. Can be a number, an array or any [rectangle](https://github.com/dy/parse-rect) format.\n`color`, `size`, `borderColor`, `borderSize`, `opacity` | Points style.\n`marker` | Points marker.\n`diagonal` | Show or hide diagonal.\n`upper` | Show or hide upper half matrix.\n`lower` | Show or hide lower half matrix.\n`viewport` | Area that the plot holds within the canvas. Can take any [rectangle](https://github.com/dy/parse-rect) format.\n<!-- `transpose` | Use transposed view of data, ie. swap columns and rows. -->\n<!-- `normalizeDomain` | Normalize domains to fit the viewport. -->\n<!-- `snap` | Enable snapping for the points, ie. hide invisible points -->\n\n\n### `splom.draw(...ids?|...points?)`\n\nDraw all defined passes, or only selected ones provided by `ids`. Optionally define point indexes to render.\n\n```js\n// draw 1 and 3 passes\nsplom.draw(1, 3)\n\n// draw 1, 2 and 3 points from the first pass and 3 point from the second pass\nsplom.draw([1, 2, 3], [3])\n```\n\n### `splom.destroy()`\n\nDispose renderer and all the associated resources\n\n## Related\n\n* [regl-scatter2d](https://github.com/dy/regl-scatter2d)\n* [regl-line2d](https://github.com/dy/regl-line2d)\n* [regl-error2d](https://github.com/dy/regl-error2d)\n\n\n## License\n\nÂ© 2018 Dmitry Yv. MIT License\n\nDevelopment supported by [plot.ly](https://github.com/plotly/).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/regl-splom/-/regl-splom-1.0.14.tgz#58800b7bbd7576aa323499a1966868a6c9ea1456",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/regl-splom/-/regl-splom-1.0.14.tgz",
    "hash": "58800b7bbd7576aa323499a1966868a6c9ea1456",
    "integrity": "sha512-OiLqjmPRYbd7kDlHC6/zDf6L8lxgDC65BhC8JirhP4ykrK4x22ZyS+BnY8EUinXKDeMgmpRwCvUmk7BK4Nweuw==",
    "registry": "npm",
    "packageName": "regl-splom",
    "cacheIntegrity": "sha512-OiLqjmPRYbd7kDlHC6/zDf6L8lxgDC65BhC8JirhP4ykrK4x22ZyS+BnY8EUinXKDeMgmpRwCvUmk7BK4Nweuw== sha1-WIALe711dqoyNJmhlmhopsnqFFY="
  },
  "registry": "npm",
  "hash": "58800b7bbd7576aa323499a1966868a6c9ea1456"
}