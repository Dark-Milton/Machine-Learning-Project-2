{
  "manifest": {
    "name": "split-polygon",
    "version": "1.0.0",
    "description": "Splits a convex polygon by a plane",
    "main": "clip-poly.js",
    "dependencies": {
      "robust-dot-product": "^1.0.0",
      "robust-sum": "^1.0.0"
    },
    "devDependencies": {
      "tap": "~0.4.4",
      "tape": "~1.1.1"
    },
    "scripts": {
      "test": "tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/split-polygon.git"
    },
    "keywords": [
      "split",
      "polygon",
      "clip",
      "sutherland-hodgman",
      "3d",
      "2d",
      "graphics"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mikolalysenko/split-polygon/issues"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-split-polygon-1.0.0-0eacc8a136a76b12a3d95256ea7da45db0c2d247-integrity/node_modules/split-polygon/package.json",
    "readmeFilename": "README.md",
    "readme": "split-polygon\n=============\nSplits a *convex* polygon by a plane into two parts (or optionally clips the polygon against a single plane) using the Sutherland-Hodgman algorithm.  Works in arbitrary dimensions, both in the server and the browser\n\n## Install\n\n    npm install split-polygon\n\n## Example\n\n```javascript\nvar splitPolygon = require(\"split-polygon\")\n\nvar poly = [[1,2], [3,4], [0,0]]\n\nvar parts = splitPolygon(poly, [0, 1, 3])\n\nconsole.log(parts.positive)\nconsole.log(parts.negative)\n```\n\n## API\n\n```javascript\nvar splitPolygon = require(\"split-polygon\")\n```\n\n### `splitPolygon(poly, plane)`\nSplits the *convex* polygon `poly` against plane into two parts, one above the plane and the other below it.  The equation for the plane is determined by:\n\n```javascript\nfunction planeDistance(x) {\n  return plane[0] * x[0] + plane[1] * x[1] + ... + plane[n-1] * x[n-1] + plane[n]\n}\n```\n\nPoints above the plane are those where `planeDistance(x) >= 0` and below are those with `planeDistance(x) <= 0`\n\n* `poly` is a *convex* polygon\n* `plane` is the plane\n\n**Returns** An object with two properties:\n\n* `positive` is the portion of the polygon above the plane\n* `negative` is the portion of the polygon below the plane\n\n### `splitPolygon.positive(poly, plane)`\nSame result as splitPolygon, except only returns the positive part.  This saves a bit of memory if you only need one side.\n\n### `splitPolygon.negative(poly, plane)`\nDitto, except returns only the negative part.\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/split-polygon/-/split-polygon-1.0.0.tgz#0eacc8a136a76b12a3d95256ea7da45db0c2d247",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/split-polygon/-/split-polygon-1.0.0.tgz",
    "hash": "0eacc8a136a76b12a3d95256ea7da45db0c2d247",
    "integrity": "sha1-DqzIoTanaxKj2VJW6n2kXbDC0kc=",
    "registry": "npm",
    "packageName": "split-polygon",
    "cacheIntegrity": "sha512-nBFcgQUVEE8dcOjuKaRdlM53k8RxUYpRxZ//n0pHJQGhbVscrsti+gllJI3pK3y7fgFwGWgt7NFhAX5sz0UoWQ== sha1-DqzIoTanaxKj2VJW6n2kXbDC0kc="
  },
  "registry": "npm",
  "hash": "0eacc8a136a76b12a3d95256ea7da45db0c2d247"
}