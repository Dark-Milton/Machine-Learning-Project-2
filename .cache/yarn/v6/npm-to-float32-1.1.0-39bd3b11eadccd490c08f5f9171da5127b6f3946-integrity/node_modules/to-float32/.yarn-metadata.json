{
  "manifest": {
    "name": "to-float32",
    "version": "1.1.0",
    "description": "Convert data to float32 array or get float32 fractions",
    "main": "index.js",
    "scripts": {
      "test": "node test"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dy/to-float32.git"
    },
    "keywords": [
      "float32",
      "fract32",
      "webgl"
    ],
    "author": {
      "name": "Dmitry Yv.",
      "email": "dfcreative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/dy/to-float32/issues"
    },
    "homepage": "https://github.com/dy/to-float32#readme",
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-to-float32-1.1.0-39bd3b11eadccd490c08f5f9171da5127b6f3946-integrity/node_modules/to-float32/package.json",
    "readmeFilename": "readme.md",
    "readme": "# to-float32 [![unstable](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges) [![Build Status](https://travis-ci.org/dy/to-uint8.svg?branch=master)](https://travis-ci.org/dy/to-uint8)\n\nDirty little helper to convert array to float32 array or return round remainder of converting to float32. Useful for sending data to webgl buffers.\n\n[![npm install to-float32](https://nodei.co/npm/to-float32.png?mini=true)](https://npmjs.org/package/to-float32/)\n\n```js\nlet {float32, fract32} = require('to-float32')\n\nlet data = Array.from({length: 1024}, Math.random)\n\n// create float32 data\nlet buffer = float(data)\n\n// get float32 remainders\nlet fractBuffer = fract32(data)\n\n// convert number to float32\nlet f32 = float32(0.1) // 0.10000000149011612\n\n// get float32 number remainder\nlet rem32 = fract32(0.1) //\n```\n\nFract data is _Float32Array_ with values calculated as `origValue - float32value`\n\n## License\n\n(c) 2017 Dmitry Yv. MIT License\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/to-float32/-/to-float32-1.1.0.tgz#39bd3b11eadccd490c08f5f9171da5127b6f3946",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/to-float32/-/to-float32-1.1.0.tgz",
    "hash": "39bd3b11eadccd490c08f5f9171da5127b6f3946",
    "integrity": "sha512-keDnAusn/vc+R3iEiSDw8TOF7gPiTLdK1ArvWtYbJQiVfmRg6i/CAvbKq3uIS0vWroAC7ZecN3DjQKw3aSklUg==",
    "registry": "npm",
    "packageName": "to-float32",
    "cacheIntegrity": "sha512-keDnAusn/vc+R3iEiSDw8TOF7gPiTLdK1ArvWtYbJQiVfmRg6i/CAvbKq3uIS0vWroAC7ZecN3DjQKw3aSklUg== sha1-Ob07EerczUkMCPX5Fx2lEntvOUY="
  },
  "registry": "npm",
  "hash": "39bd3b11eadccd490c08f5f9171da5127b6f3946"
}