{
  "manifest": {
    "name": "get-canvas-context",
    "version": "1.0.2",
    "description": "gets canvas context by name",
    "main": "index.js",
    "license": "MIT",
    "author": {
      "name": "Matt DesLauriers",
      "email": "dave.des@gmail.com",
      "url": "https://github.com/mattdesl"
    },
    "dependencies": {},
    "devDependencies": {
      "browserify": "^10.2.4",
      "faucet": "0.0.1",
      "smokestack": "^3.3.0",
      "tape": "^4.0.0"
    },
    "scripts": {
      "test": "browserify test.js | smokestack | faucet"
    },
    "keywords": [
      "canvas",
      "context",
      "2d",
      "webgl",
      "experimental",
      "webgl2",
      "3d",
      "gl",
      "html5"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/Jam3/get-canvas-context.git"
    },
    "homepage": "https://github.com/Jam3/get-canvas-context",
    "bugs": {
      "url": "https://github.com/Jam3/get-canvas-context/issues"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-get-canvas-context-1.0.2-d6e7b50bc4e4c86357cd39f22647a84b73601e93-integrity/node_modules/get-canvas-context/package.json",
    "readmeFilename": "README.md",
    "readme": "# get-canvas-context\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nCreates a new HTML5 Canvas Context with the given dimensions and options. Returns `null` if not supported.\n\nSupports `'webgl'`, `'webgl2'` and `'2d'`, handles vendor prefixing, and runs in Node and the Browser.\n\n## Install\n\n```sh\nnpm install get-canvas-context --save\n```\n\n## Example\n\n```js\nvar getContext = require('get-canvas-context')\n\n// create a new 50x50 2D canvas\nvar ctx = getContext('2d', {\n  width: 50,\n  height: 50\n})\n\n// add to DOM\ndocument.body.appendChild(ctx.canvas)\n\n// draw to it\nctx.fillRect(0, 0, 50, 50)\n```\n\nOr, WebGL using an existing canvas:\n\n```js\nvar canvas = document.createElement('canvas')\n\nvar gl = getContext('webgl', {\n  canvas: canvas,\n  antialias: true\n})\n\nif (!gl) {\n  throw new Error('webgl not supported')\n}\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/get-canvas-context.png)](https://www.npmjs.com/package/get-canvas-context)\n\n#### `ctx = createContext(type, [opt])`\n\nReturns a new canvas context for the given `type`, a string which is either `'2d'`, `'webgl'` or `'webgl2'`. The options:\n\n- `canvas` - an existing canvas element to re-use rather than creating a new one\n- `width` - if specified, will set the canvas width\n- `height` - if specified, will set the canvas height\n- `{...contextAttributes}` any other options for the rendering context, like `alpha`\n\nHandles vendor prefixing for WebGL contexts. Returns `null` if we are not in a browser, or if the context is not available, or if there was an error creating the context.\n\n**Note:** As of the time of writing (Jun 2015), `\"webgl2\"` is only supported through special flags in Chrome Canary and FireFox Nightly.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/get-canvas-context/blob/master/LICENSE.md) for details.\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2015 Jam3\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-canvas-context/-/get-canvas-context-1.0.2.tgz#d6e7b50bc4e4c86357cd39f22647a84b73601e93",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-canvas-context/-/get-canvas-context-1.0.2.tgz",
    "hash": "d6e7b50bc4e4c86357cd39f22647a84b73601e93",
    "integrity": "sha1-1ue1C8TkyGNXzTnyJkeoS3NgHpM=",
    "registry": "npm",
    "packageName": "get-canvas-context",
    "cacheIntegrity": "sha512-LnpfLf/TNzr9zVOGiIY6aKCz8EKuXmlYNV7CM2pUjBa/B+c2I15tS7KLySep75+FuerJdmArvJLcsAXWEy2H0A== sha1-1ue1C8TkyGNXzTnyJkeoS3NgHpM="
  },
  "registry": "npm",
  "hash": "d6e7b50bc4e4c86357cd39f22647a84b73601e93"
}