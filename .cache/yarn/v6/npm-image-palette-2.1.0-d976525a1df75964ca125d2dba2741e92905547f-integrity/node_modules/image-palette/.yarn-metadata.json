{
  "manifest": {
    "name": "image-palette",
    "version": "2.1.0",
    "description": "Get palette for any image file, no node-canvas",
    "keywords": [
      "palette",
      "color",
      "image",
      "sample",
      "canvas",
      "photo",
      "quantize",
      "image-pixels",
      "pixels",
      "gif",
      "image-encode"
    ],
    "scripts": {
      "test": "node test.js"
    },
    "author": {
      "name": "Dmitry Yv",
      "email": "df.creative@gmail.com"
    },
    "devDependencies": {
      "almost-equal": "^1.1.0",
      "array-range": "^1.0.1",
      "image-pixels": "^2.0.2",
      "tape": "^4.9.1"
    },
    "main": "index",
    "repository": {
      "type": "git",
      "url": "https://github.com/dy/image-palette.git"
    },
    "dependencies": {
      "color-id": "^1.1.0",
      "pxls": "^2.0.0",
      "quantize": "^1.0.2"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-image-palette-2.1.0-d976525a1df75964ca125d2dba2741e92905547f-integrity/node_modules/image-palette/package.json",
    "readmeFilename": "readme.md",
    "readme": "# image-palette [![Build Status](https://travis-ci.org/dy/image-palette.svg?branch=master)](https://travis-ci.org/dy/image-palette) [![unstable](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges)\n\nExtract palette from pixels array, return pixels mapped to palette. Useful for organizing [palette-based encoding](https://ghub.io/image-encode), like GIF, or various limited colors renderers, like [gl-scatter2d](https://ghub.io/gl-scatter2d).\n\nInspired by [get-rgba-palette](https://github.com/mattdesl/get-rgba-palette).\n\n## Usage\n\n[![$ npm install image-palette](http://nodei.co/npm/image-palette.png?mini=true)](http://npmjs.org/package/image-palette)\n\n```javascript\nvar palette = require('image-palette')\nvar pixels = require('image-pixels')\n\nvar {ids, colors} = palette(await pixels('./image.png'))\n```\n\n## API\n\n### `var {ids, colors, amount} = palette(pixels, count=5)`\n\nExtract palette from the input `pixels` array with `rgba` pixels sequence, whether flat or nested.\n\n* `colors` is a list of extracted colors `[[r, g, b, a], [r, g, b, a], ...]`.\n* `ids` is an array of input pixels mapped to extracted `colors`.\n* `amount` is an array with amounts corresponding to the extracted colors, from `0..1` range.\n* `count` is max number of colors to extract.\n\n## Related\n\n* [image-pixels](https://ghub.io/image-pixels) − load pixels data from any image source.\n* [image-save](https://ghub.io/image-save) − save image/pixel data to a file, canvas or array.\n* [image-equal](https://ghub.io/image-equal) − test if two images are equal, based on fuzzy comparison.\n\n## License\n\n© 2018 Dmitry Yv. MIT License.\n",
    "license": "MIT*"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/image-palette/-/image-palette-2.1.0.tgz#d976525a1df75964ca125d2dba2741e92905547f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/image-palette/-/image-palette-2.1.0.tgz",
    "hash": "d976525a1df75964ca125d2dba2741e92905547f",
    "integrity": "sha512-3ImSEWD26+xuQFdP0RWR4WSXadZwvgrFhjGNpMEapTG1tf2XrBFS2dlKK5hNgH4UIaSQlSUFRn1NeA+zULIWbQ==",
    "registry": "npm",
    "packageName": "image-palette",
    "cacheIntegrity": "sha512-3ImSEWD26+xuQFdP0RWR4WSXadZwvgrFhjGNpMEapTG1tf2XrBFS2dlKK5hNgH4UIaSQlSUFRn1NeA+zULIWbQ== sha1-2XZSWh33WWTKEl0tuidB6SkFVH8="
  },
  "registry": "npm",
  "hash": "d976525a1df75964ca125d2dba2741e92905547f"
}