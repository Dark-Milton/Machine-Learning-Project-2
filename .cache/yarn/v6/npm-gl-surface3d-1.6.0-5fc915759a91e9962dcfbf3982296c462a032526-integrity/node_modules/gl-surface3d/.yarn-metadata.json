{
  "manifest": {
    "name": "gl-surface3d",
    "version": "1.6.0",
    "description": "Renders parametric surfaces in 3D",
    "main": "surface.js",
    "dependencies": {
      "binary-search-bounds": "^2.0.4",
      "bit-twiddle": "^1.0.2",
      "colormap": "^2.3.1",
      "dup": "^1.0.0",
      "gl-buffer": "^2.1.2",
      "gl-mat4": "^1.2.0",
      "gl-shader": "^4.2.1",
      "gl-texture2d": "^2.1.0",
      "gl-vao": "^1.3.0",
      "glsl-out-of-range": "^1.0.4",
      "glsl-specular-beckmann": "^1.1.2",
      "glslify": "^7.0.0",
      "ndarray": "^1.0.18",
      "ndarray-gradient": "^1.0.0",
      "ndarray-ops": "^1.2.2",
      "ndarray-pack": "^1.2.1",
      "ndarray-scratch": "^1.2.0",
      "surface-nets": "^1.0.2",
      "typedarray-pool": "^1.1.0"
    },
    "devDependencies": {
      "chttps": "^1.0.6",
      "dirichlet": "^1.0.1",
      "game-shell-orbit-camera": "^1.0.0",
      "gl-axes3d": "^1.5.3",
      "gl-matrix": "^3.3.0",
      "gl-now": "^1.4.0",
      "gl-select-static": "^2.0.6",
      "gl-spikes3d": "^1.0.10",
      "install": "^0.13.0",
      "ndarray-fill": "^1.0.2"
    },
    "scripts": {
      "postshrinkwrap": "chttps .",
      "test": "echo \"Error: no test specified\" && exit 1",
      "start": "beefy --open --live example/example.js"
    },
    "browserify": {
      "transform": [
        "glslify"
      ]
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/gl-vis/gl-surface3d.git"
    },
    "keywords": [
      "plot",
      "surface",
      "webgl",
      "visualization",
      "surf",
      "height",
      "field"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gl-vis/gl-surface3d/issues"
    },
    "homepage": "https://github.com/gl-vis/gl-surface3d",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-gl-surface3d-1.6.0-5fc915759a91e9962dcfbf3982296c462a032526-integrity/node_modules/gl-surface3d/package.json",
    "readmeFilename": "README.md",
    "readme": "gl-surface3d\n===============\n3D parametric surface plotting, compatible with [gl-vis](http://github.com/gl-vis).\n\n# Example\n\n```javascript\nvar createScene       = require('gl-plot3d')\nvar createSurfacePlot = require('gl-surface3d')\nvar ndarray           = require('ndarray')\nvar fill              = require('ndarray-fill')\nvar diric             = require('dirichlet')\n\nvar scene = createScene()\n\n//Create field\nvar field = ndarray(new Float32Array(512*512), [512,512])\nfill(field, function(x,y) {\n  return 128 * diric(10, 10.0*(x-256)/512) * diric(10, 10.0*(y-256)/512)\n})\n\n//Create surface plot\nvar surface = createSurfacePlot({\n  gl:    scene.gl,\n  field: field\n})\n\nscene.add(surface)\n```\n\nHere is what this should look like:\n\n<img src=\"plot.png\">\n\n[Test it in your browser (requires WebGL)](http://gl-vis.github.io/gl-surface3d/)\n\n# Install\n\n```\nnpm install gl-surface3d\n```\n\n# Basic Interface\n\n## Constructor\n\n#### `var surface = require('gl-surface3d')(params)`\nCreates a surface plot object.  `params` is an object with any of the following parameters\n\n* `gl` is a WebGL context\n* `field` a new 2D field encoded as an ndarray\n* `coords` is an array of 3 2D fields, each encoded as ndarrays (for parameteric surfaces)\n* `intensity` a 2D intensity field (defaults to `field` or `coords[2] is not present)\n* `colormap` the name of the new color map for the surface (see list of names in `colormap` [docs](https://github.com/bpostlethwaite/colormap))\n* `intensityBounds` sets the intensity range for the colormap\n* `ticks` is a pair of arrays of ticks representing the spacing of the points for the axes of the surface\n* `showSurface` if set, draw the surface\n* `showContour` if set, draw contour lines\n* `contourWidth` the width fo the contour lines\n* `contourTint` the amount of tint of the contour lines\n* `contourColor` the color of the contour line tint\n* `levels` an array of arrays representing the level of the isolines.\n* `dynamicWidth` the width of the dynamic isolines\n* `dynamicColors` the color of the dynamic isolines\n* `dynamicTint` the tint of the dynamic isolines\n* `vertexColor` interpolate color in fragment or vertex shader, useful for discontinuous functions ([ref](https://github.com/plotly/plotly.js/issues/940))\n\n\n## Methods\n\n#### `surface.update(params)`\nModify the surface.  `params` is an object with the same properties as the constructor\n\n\n# License\n(c) 2014-2015 Mikola Lysenko. MIT License.\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gl-surface3d/-/gl-surface3d-1.6.0.tgz#5fc915759a91e9962dcfbf3982296c462a032526",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gl-surface3d/-/gl-surface3d-1.6.0.tgz",
    "hash": "5fc915759a91e9962dcfbf3982296c462a032526",
    "integrity": "sha512-x15+u4712ysnB85G55RLJEml6mOB4VaDn0VTlXCc9JcjRl5Es10Tk7lhGGyiPtkCfHwvhnkxzYA1/rHHYN7Y0A==",
    "registry": "npm",
    "packageName": "gl-surface3d",
    "cacheIntegrity": "sha512-x15+u4712ysnB85G55RLJEml6mOB4VaDn0VTlXCc9JcjRl5Es10Tk7lhGGyiPtkCfHwvhnkxzYA1/rHHYN7Y0A== sha1-X8kVdZqR6ZYtz785gilsRioDJSY="
  },
  "registry": "npm",
  "hash": "5fc915759a91e9962dcfbf3982296c462a032526"
}