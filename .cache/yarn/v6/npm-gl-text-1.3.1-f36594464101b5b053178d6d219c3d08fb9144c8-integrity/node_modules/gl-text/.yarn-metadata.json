{
  "manifest": {
    "name": "gl-text",
    "version": "1.3.1",
    "description": "Render text with WebGL",
    "main": "dist.js",
    "scripts": {
      "postshrinkwrap": "chttps .",
      "test": "budo --force-default-index test",
      "build": "buble index.js > dist.js",
      "prepublish": "npm run build",
      "build-demo": "browserify test.js -g bubleify | indexhtmlify | metadataify | github-cornerify | mobilify > index.html"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/a-vis/gl-text.git"
    },
    "keywords": [
      "regl",
      "plotly",
      "text",
      "gl-text",
      "typography",
      "font"
    ],
    "browserify": {},
    "author": {
      "name": "Dmitry Yv",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/a-vis/gl-text/issues"
    },
    "homepage": "https://github.com/a-vis/gl-text#readme",
    "dependencies": {
      "bit-twiddle": "^1.0.2",
      "color-normalize": "^1.5.0",
      "css-font": "^1.2.0",
      "detect-kerning": "^2.1.2",
      "es6-weak-map": "^2.0.3",
      "flatten-vertex-data": "^1.0.2",
      "font-atlas": "^2.1.0",
      "font-measure": "^1.2.2",
      "gl-util": "^3.1.2",
      "is-plain-obj": "^1.1.0",
      "object-assign": "^4.1.1",
      "parse-rect": "^1.2.0",
      "parse-unit": "^1.0.1",
      "pick-by-alias": "^1.2.0",
      "regl": "^2.0.0",
      "to-px": "^1.0.1",
      "typedarray-pool": "^1.1.0"
    },
    "devDependencies": {
      "buble": "^0.19.3",
      "chttps": "^1.0.6",
      "fps-indicator": "^1.3.0",
      "multi-regl": "^1.1.1",
      "pan-zoom": "^3.4.1",
      "raf": "^3.4.1",
      "tape": "^4.9.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-gl-text-1.3.1-f36594464101b5b053178d6d219c3d08fb9144c8-integrity/node_modules/gl-text/package.json",
    "readmeFilename": "readme.md",
    "readme": "# gl-text [![unstable](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges)\n\nRender bitmap text with WebGL.\n\n## Usage\n\n[![npm install gl-text](https://nodei.co/npm/gl-text.png?mini=true)](https://npmjs.org/package/gl-text/)\n\n```js\nconst Text = require('gl-text')\n\nlet text1 = new Text()\n\ntext1.update({\n\tposition: [50, 50],\n\ttext: 'ABC',\n\tfont: '16px Helvetica, sans-serif'\n})\ntext1.render()\n\n// create another text renderer on the same context\nlet text2 = new Text(text1.gl)\ntext2.update({\n\tfont: {\n\t\tfamily: ['Helvetica', 'Arial', 'sans-serif'],\n\t\tsize: '1rem'\n\t}\n})\n```\n\n## API\n\n### `let text = new Text(gl|regl|canvas|container|options?)`\n\nCreate text renderer instance for the WebGL context `gl`, [`regl`](https://ghub.io/regl) instance, `canvas`/`container` element or based on `options`:\n\nOption | Meaning\n---|---\n`regl` | Existing `regl` instance. By default new one is created.\n`gl`/`context` | Existing WebGL context. By default new one is created.\n`canvas` | Existing `canvas` element.\n`container` | Existing `container` element. By default new canvas is created within the container.\n\nNo arguments call creates new fullscreen canvas.\n\n### `text.update(options)`\n\nUpdate state of a `Text` instance.\n\nOption | Description\n---|---\n`text` \t\t\t| Text string or array of strings to display.\t\t\t\t\t\t\t\t|\n`position` \t\t| Position of the text on the screen within the `range`, a couple `[x, y]` or array `[[x ,y], [x, y], ...]` corresponding to text.\t\t\t\t\t\t|\n`align` \t\t| Horizontal alignment relative to the `position`. Can be one of `left`, `right`, `center`/`middle`, `start`, `end`, or a number of em units. By default `left`. Can be an array, corresponding to text.\t\t\t\t\t\t\t|\n`baseline` \t\t| Vertical alignment value, by default `middle`. Can be a string one of `top`, `hanging`, `middle`, `alphabetic`, `ideographic`, `bottom` etc. (see [font-measure](https://ghub.io/font-measure)) or a number of em units, denoting `0` as alphabetic baseline. Can be an array corresponding to text.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n`color` \t\t| Text color or array of colors. By default `black`.\t\t\t\t\t\t|\n`font` \t\t\t| Font family, CSS font string or an object with font properties like `{family, size, style}`, see [css-font](https://ghub.io/css-font). Can be an array.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n`fontSize`/`em` | Font-size, can be changed independently of `font`.\t\t\t\t\t\t|\n`kerning` \t\t| Enable font kerning, by default `true`. Disable for the case of monospace fonts. See [detect-kerning](https://ghub.io/detect-kerning) package.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n`offset` \t\t| Shift `position` by the number of ems. Useful for organizing multiple lines, indentation, sub/sup script etc. Does not get affected by `position` change. Can be a number for x-offset only or a couple `[x, y]` for single position or array `[[x, y], [x, y], ...]` for multiple positions.\t\t\t\t\t\t|\n`range` \t\t| Data area corresponding to position in viewport. Useful for organizing zoom/pan. By default is the same as the viewport `[0, 0, canvas.width, canvas.height]`.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n`scale`/`translate` | An alternative to `range`.\t\t\t\t\t\t\t\t\t\t\t|\n`viewport` \t\t| Visible area within the canvas, an array `[left, top, width, height]` or rectangle `{x, y, width, height}`, see [parse-rect](https://ghub.io/parse-rect).\n\n<!-- `direction` | TODO -->\n<!-- `letterSpacing`, `tracking` | Distance between letters, fractions of `em`. By default `0`. -->\n\n### `text.render()`\n\nDraw text.\n\n### `text.destroy()`\n\nDispose text renderer.\n\n### Properties\n\n* `text.gl` - WebGL context.\n* `text.canvas` - canvas element.\n* `text.regl` - regl instance.\n\n\n## License\n\nÂ© 2018 Dmitry Yv. MIT License\n\nDevelopment supported by [plot.ly](https://github.com/plotly/).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gl-text/-/gl-text-1.3.1.tgz#f36594464101b5b053178d6d219c3d08fb9144c8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gl-text/-/gl-text-1.3.1.tgz",
    "hash": "f36594464101b5b053178d6d219c3d08fb9144c8",
    "integrity": "sha512-/f5gcEMiZd+UTBJLTl3D+CkCB/0UFGTx3nflH8ZmyWcLkZhsZ1+Xx5YYkw2rgWAzgPeE35xCqBuHSoMKQVsR+w==",
    "registry": "npm",
    "packageName": "gl-text",
    "cacheIntegrity": "sha512-/f5gcEMiZd+UTBJLTl3D+CkCB/0UFGTx3nflH8ZmyWcLkZhsZ1+Xx5YYkw2rgWAzgPeE35xCqBuHSoMKQVsR+w== sha1-82WURkEBtbBTF41tIZw9CPuRRMg="
  },
  "registry": "npm",
  "hash": "f36594464101b5b053178d6d219c3d08fb9144c8"
}