{
  "manifest": {
    "name": "cubic-hermite",
    "version": "1.0.0",
    "description": "Cubic hermite interpolation",
    "main": "hermite.js",
    "dependencies": {},
    "devDependencies": {
      "tape": "^2.12.3"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/cubic-hermite.git"
    },
    "keywords": [
      "spline",
      "position",
      "velocity",
      "interpolation",
      "point",
      "particle",
      "game",
      "physics",
      "numerical",
      "method",
      "math"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "d971c7ff8f94b260fc96da41c4497fa87d3a07b4",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-cubic-hermite-1.0.0-84e3b2f272b31454e8393b99bb6aed45168c14e5-integrity/node_modules/cubic-hermite/package.json",
    "readme": "cubic-hermite\n=============\n[Cubic hermite spline](http://en.wikipedia.org/wiki/Cubic_Hermite_spline) for interpolating position/velocity pairs.  Simplest quick and dirty way to get a smooth path between points\n\n## Install\n\n    npm install cubic-hermite\n    \n## Example\n\n```javascript\nvar hermite = require(\"cubic-hermite\")\n\n//Compute intial position and velocity\nvar initial_position = [0, 1]\n  , initial_velocity = [1, 0]\n  , final_positions  = [1, 0]\n  , final_velocity   = [0, 1]\n  \n//Plot curve\nfor(var t=0.0; t<1.0; t+=0.1) {\n  console.log(hermite(initial_position, initial_velocity, final_position, final_velocity, t))\n}\n```\n\n## API\n\n### `require(\"cubic-hermite\")(p0, v0, p1, v1, t[, result])`\nComputes an interpolated position between initial and final configurations at time t.  Arguments can be either scalars or arrays\n\n* `p0` is the initial position\n* `v0` is the initial velocity\n* `p1` is the final position\n* `v1` is the final velocity\n* `t` is the point on the curve to interpolate to in the range [0,1]\n* `result` is a vector that gets the result of the interpolation (if not specified, a new vector is created)\n\n**Returns** The interpolated point on the curve\n\n### `require(\"cubic-hermite\").derivative(p0, v0, p1, v1, t[, result])`\nReturns the velocity along the curve at a point t\n\n* `p0` is the initial position\n* `v0` initial velocity\n* `p1` final position\n* `v1` final velocity\n* `t` point on the curve to interpolate to, in the range [0,1]\n* `result` stores the result of the interpolation.  (if not specified, is reallocated)\n\n**Returns** The interpolated velocity at the time `t`\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/cubic-hermite/-/cubic-hermite-1.0.0.tgz#84e3b2f272b31454e8393b99bb6aed45168c14e5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/cubic-hermite/-/cubic-hermite-1.0.0.tgz",
    "hash": "84e3b2f272b31454e8393b99bb6aed45168c14e5",
    "integrity": "sha1-hOOy8nKzFFToOTuZu2rtRRaMFOU=",
    "registry": "npm",
    "packageName": "cubic-hermite",
    "cacheIntegrity": "sha512-DKZ6yLcJiJJgl54mGA4n0uueYB4qdPfOJrQ1HSEZqdKp6D25AAAWVDwpoAxLflOku5a/ALBO77oEIyWcVa+UYg== sha1-hOOy8nKzFFToOTuZu2rtRRaMFOU="
  },
  "registry": "npm",
  "hash": "84e3b2f272b31454e8393b99bb6aed45168c14e5"
}