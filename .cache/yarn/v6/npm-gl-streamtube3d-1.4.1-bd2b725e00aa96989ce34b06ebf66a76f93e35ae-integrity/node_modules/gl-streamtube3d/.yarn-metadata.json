{
  "manifest": {
    "name": "gl-streamtube3d",
    "version": "1.4.1",
    "description": "3D stream tube plot",
    "main": "streamtube.js",
    "dependencies": {
      "gl-cone3d": "^1.5.2",
      "gl-vec3": "^1.1.3",
      "gl-vec4": "^1.0.1",
      "glsl-inverse": "^1.0.0",
      "glsl-out-of-range": "^1.0.4",
      "glsl-specular-cook-torrance": "^2.0.1",
      "glslify": "^7.0.0"
    },
    "devDependencies": {
      "3d-view-controls": "^2.2.2",
      "bound-points": "^1.0.0",
      "canvas-fit": "^1.5.0",
      "chttps": "^1.0.6",
      "gl-axes3d": "^1.5.3",
      "gl-select-static": "^2.0.6",
      "gl-spikes3d": "^1.0.10"
    },
    "scripts": {
      "postshrinkwrap": "chttps .",
      "build": "browserify -o build/bundle.js streamtube.js",
      "build-example": "browserify -o build/example.js example/streamtube.js",
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/gl-vis/gl-streamtube3d.git"
    },
    "keywords": [
      "webgl",
      "cone plot"
    ],
    "browserify": {
      "transform": [
        "glslify"
      ]
    },
    "author": {
      "name": "Mikola Lysenko, Ilmari Heikkinen"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gl-vis/gl-streamtube3d/issues"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-gl-streamtube3d-1.4.1-bd2b725e00aa96989ce34b06ebf66a76f93e35ae-integrity/node_modules/gl-streamtube3d/package.json",
    "readmeFilename": "README.md",
    "readme": "gl-streamtube3d\n=====================\nVisualization module for vector fields.\n\n# Example\n\n```javascript\nvar createScene    = require('gl-plot3d')\nvar createMesh     = require('gl-mesh3d')\nvar createStreamTube = require('gl-streamtube3d')\nvar wind           = require('dataset-wind')\n\nvar scene = createScene()\n\nvar bounds = [];\n\nvar streamTube = createStreamTube({\n    startingPositions: positionsArray,\n    maxLength: 1000,\n    getVelocity: velocityFunction,\n    colormap: 'portland'\n}, bounds)\n\nvar mesh = createMesh(gl, streamTube)\n\nscene.add(mesh)\n```\n\n[Try out the example in your browser](http://gl-vis.github.io/gl-streamtube3d/)\n\n# Install\n\n```\nnpm i gl-streamtube3d\n```\n\n# Basic interface\n\n## Constructor\n\n#### `var streamTube = require('gl-streamtube3d')(params, bounds)`\nCreates a stream tube plot of a vector field.\n\n* `params` is an object that has the following properties:\n\n    + `startingPositions` *(Required)* An array of starting positions for the vector field, encoded as arrays.\n    + `getVelocity(point)` *(Optional)* A getter function to get the velocity at a given point.\n    + `getDivergence(point)` *(Optional)* A getter function to get the divergence at a given point. Used for the width of the streamtube. Defaults to the divergence of the getVelocity function.\n    + `maxLength` *(Optional)* The maximum number of segments to add to a streamtube. Default is 1000.\n    + `tubeSize` *(Optional)* The scaling factor for the streamtubes. The default is 1, which avoids two max divergence tubes from touching at adjacent starting positions.\n    + `absoluteTubeSize` *(Optional)* Absolute scaling factor for the streamtubes. A value of 1 scales divergence of 1 to 1 coordinate system unit. Overrides tubeSize.\n    + `colormap` *(Optional)* The colormap to use.\n\n**Returns** A streamtube plot object that can be passed to gl-mesh3d.\n\n# Credits\n(c) 2013-2017 Mikola Lysenko, Ilmari Heikkinen. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013-2017 Mikola Lysenko, Ilmari Heikkinen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gl-streamtube3d/-/gl-streamtube3d-1.4.1.tgz#bd2b725e00aa96989ce34b06ebf66a76f93e35ae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gl-streamtube3d/-/gl-streamtube3d-1.4.1.tgz",
    "hash": "bd2b725e00aa96989ce34b06ebf66a76f93e35ae",
    "integrity": "sha512-rH02v00kgwgdpkXVo7KsSoPp38bIAYR9TE1iONjcQ4cQAlDhrGRauqT/P5sUaOIzs17A2DxWGcXM+EpNQs9pUA==",
    "registry": "npm",
    "packageName": "gl-streamtube3d",
    "cacheIntegrity": "sha512-rH02v00kgwgdpkXVo7KsSoPp38bIAYR9TE1iONjcQ4cQAlDhrGRauqT/P5sUaOIzs17A2DxWGcXM+EpNQs9pUA== sha1-vStyXgCqlpic40sG6/Zqdvk+Na4="
  },
  "registry": "npm",
  "hash": "bd2b725e00aa96989ce34b06ebf66a76f93e35ae"
}