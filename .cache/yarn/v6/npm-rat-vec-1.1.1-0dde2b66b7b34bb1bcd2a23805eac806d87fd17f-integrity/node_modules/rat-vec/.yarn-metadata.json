{
  "manifest": {
    "name": "rat-vec",
    "version": "1.1.1",
    "description": "Exact rational vector arithmetic",
    "main": "index.js",
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rat-nest/rat-vec.git"
    },
    "keywords": [
      "rational",
      "vector",
      "exact",
      "arithmetic",
      "geometry"
    ],
    "authors": [
      "Mikola Lysenko",
      "Elijah Insua"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rat-nest/rat-vec/issues"
    },
    "homepage": "https://github.com/rat-nest/rat-vec#readme",
    "dependencies": {
      "big-rat": "^1.0.3"
    },
    "devDependencies": {
      "tape": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-rat-vec-1.1.1-0dde2b66b7b34bb1bcd2a23805eac806d87fd17f-integrity/node_modules/rat-vec/package.json",
    "readmeFilename": "README.md",
    "readme": "rat-vec\n=======\nExact rational vector arithmetic.\n\n<img src=\"img/rat.jpg\">\n\nrat-vec is *slow* but reliable.  You can use it to get quickly and reliably\nimplement geometric algorithms, then go back and smash your head into a wall\ntrying to optimize them with filters and predicates and snap rounding and so on.\n\nThis library is built on top of [bn.js](https://github.com/indutny/bn.js/)\n\n# Example\n\n```javascript\nvar vec = require('rat-vec')\n\nvar toFloat = require('rat-vec/to-float')\n\nvar add = require('rat-vec/add')\n\nvar sub = require('rat-vec/sub')\n\nvar dot = require('rat-vec/sub')\n\n```\n\n# Install\n\n```\nnpm i rat-vec\n```\n\n# API\n\nA `rat-vec` is an array of [`big-rat`s](https://github.com/rat-nest/big-rat).\n\n#### `var r = require('rat-vec')(v)`\nConverts a vector of `n` floating point numbers into an exact rational vector of `n+1` big ints.\n\n* `v` is a vector of floats, `big-rat`s or strings\n\n**Returns** A rational vector of big integers\n\n#### `require('rat-vec/is-vec')(v)`\nTest if `v` is a rat-vec\n\n#### `var v = require('rat-vec/to-float')(r)`\nRounds a vector of big-rats into a\n\n* `r` is a vector of `n` big integers\n\n**Returns** A vector of `n` floats representing the closest representable vector\n\n#### `var s = require('rat-vec/add')(a, b)`\n\n**Returns** The vector sum of `a` and `b`\n\n#### `var d = require('rat-vec/sub')(a, b)`\n\n**Returns** The vector difference of `a` and `b`\n\n#### `var f = require('rat-vec/dot')(a, b)`\n\n**Returns** The dot product of `a` and `b`\n\n#### `var v = require('rat-vec/muls')(a, s)`\n\n**Returns** The scalar product of `a` and `s`, where `s` is a float, big-rat or string\n\n#### `var v = require('rat-vec/divs')(a, s)`\n\n**Returns** `a` divided by the scalar `s`\n\n#### `var lerp = require('rat-vec/lerp')(a, b, t)`\n\nLinearly interpolate between `a` and `b` with parameter `t`\n\n#### `var c = require('rat-vec/cmp')(a, b)`\nCompares the components of `a` and `b`, returns an array of `0,+1,-1` whose components are the result of comparing each value.\n\n#### `var eq = require('rat-vec/equals')(a, b)`\nTest if two rational vectors are equal.\n\n#### `var h = require('rat-vec/max')(a, b)`\nComputes the component-wise maximum of `a` and `b`\n\n#### `var l = require('rat-vec/min')(a, b)`\nComputes the component-wise minimum of `a` and `b`\n\n#### `var p = require('rat-vec/mul')(a, b)`\nComputes the component-wise product of `a` and `b`\n\n#### `var r = require('rat-vec/recip')(a)`\nComputes the component-wise reciprocal of `a`\n\n#### `var q = require('rat-vec/div')(a, b)`\nComputes the component-wise quotient of `a` and `b`\n\n#### `var n = require('rat-vec/neg')(x)`\nComputes the additive inverse of `x`\n\n#### `var n = require('rat-vec/abs')(x)`\nComputes the component-wise absolute value of `x`\n\n# Credits\n\n(c) 2015, MIT License\n\n[Rat logo CC licensed, (c) La Tarte Au Citron](https://www.flickr.com/photos/tartaucitron/11328783804/in/photolist-ig5YJG-6rds6G-9ZBxcz-b9JfZ-5qdtpw-5e48pj-i6RTUn-4BbDwn-ag7YHX-9ZEtw3-7dV4fm-i6Sh6L-ieVirs-9ntyy-i6S2d9-5UAf8v-9ZBweF-qdmsJJ-aioESD-4AQEj5-9iL3y4-b4yPpk-furjEV-5UExDy-mgNSyg-5y7RQ5-ddxkgR-RTNKs-9ZEna9-5UT4cs-uZnbz-YWUx-aDRSKQ-dtTDuN-ieVsZV-5y3sLe-5TrTjY-uaN1h-5y3icB-5XjCbR-dm3VZC-5R32Eb-7ZKsBm-9ZBx4g-7TVNKb-bkJN5N-9hyNho-9ZBvwe-9ZEnmq-9ZEnsy)\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rat-vec/-/rat-vec-1.1.1.tgz#0dde2b66b7b34bb1bcd2a23805eac806d87fd17f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rat-vec/-/rat-vec-1.1.1.tgz",
    "hash": "0dde2b66b7b34bb1bcd2a23805eac806d87fd17f",
    "integrity": "sha1-Dd4rZrezS7G80qI4BerIBth/0X8=",
    "registry": "npm",
    "packageName": "rat-vec",
    "cacheIntegrity": "sha512-FbxGwkQxmw4Jx41LR7yMOR+g8M9TWCEmf/SUBQVLuK2eh0nThnffF7IUualr3XE2x5F8AdLiCVeSGwXd4snfgg== sha1-Dd4rZrezS7G80qI4BerIBth/0X8="
  },
  "registry": "npm",
  "hash": "0dde2b66b7b34bb1bcd2a23805eac806d87fd17f"
}