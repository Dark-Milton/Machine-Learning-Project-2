{
  "manifest": {
    "name": "array-bounds",
    "version": "1.0.1",
    "description": "Find [nd-]array min/max values",
    "main": "index.js",
    "scripts": {
      "test": "node test"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dfcreative/array-bounds.git"
    },
    "keywords": [
      "array",
      "bounds",
      "limits",
      "array min",
      "min",
      "max",
      "statistics",
      "samples"
    ],
    "author": {
      "name": "Dima Yv",
      "email": "dfcreative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/dfcreative/array-bounds/issues"
    },
    "homepage": "https://github.com/dfcreative/array-bounds#readme",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-array-bounds-1.0.1-da11356b4e18e075a4f0c86e1f179a67b7d7ea31-integrity/node_modules/array-bounds/package.json",
    "readmeFilename": "readme.md",
    "readme": "# array-bounds  [![experimental](https://img.shields.io/badge/stability-unstable-yellow.svg)](http://github.com/badges/stability-badges) [![Build Status](https://img.shields.io/travis/dfcreative/array-bounds.svg)](https://travis-ci.org/dfcreative/array-bounds)\n\nFind min and max values of a sequence of values/coordinates.\n\n[![npm install array-bounds](https://nodei.co/npm/array-bounds.png?mini=true)](https://npmjs.org/package/array-bounds/)\n\n```js\nconst getBounds = require('array-bounds')\n\nlet bounds = getBounds([0, 25, 50, 75, 100]) // [0, 100]\n```\n\n## API\n\n### box = bounds(array, dim=1)\n\nFigures out bounds of sequence of points using dimensions `dim` as stride, ie. for 1d values expected data layout is `[x, x, x, ...]` for 2d is `[x, y, x, y, ...]`, etc. Returned array contains bounds for every dimension as `[minX, minY, ..., maxX, maxY]`, eg.\n\n```js\n//get bounding box\nlet [minX, minY, maxX, maxY] = bounds([x1, y1, x2, y2, x3, y3, ...], 2)\n\n//get bounding cube\nlet [minX, minY, minZ, maxX, maxY, maxZ] = bounds([x1, y1, z1, x2, y2, z2, ...], 3)\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/array-bounds/-/array-bounds-1.0.1.tgz#da11356b4e18e075a4f0c86e1f179a67b7d7ea31",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/array-bounds/-/array-bounds-1.0.1.tgz",
    "hash": "da11356b4e18e075a4f0c86e1f179a67b7d7ea31",
    "integrity": "sha512-8wdW3ZGk6UjMPJx/glyEt0sLzzwAE1bhToPsO1W2pbpR2gULyxe3BjSiuJFheP50T/GgODVPz2fuMUmIywt8cQ==",
    "registry": "npm",
    "packageName": "array-bounds",
    "cacheIntegrity": "sha512-8wdW3ZGk6UjMPJx/glyEt0sLzzwAE1bhToPsO1W2pbpR2gULyxe3BjSiuJFheP50T/GgODVPz2fuMUmIywt8cQ== sha1-2hE1a04Y4HWk8MhuHxeaZ7fX6jE="
  },
  "registry": "npm",
  "hash": "da11356b4e18e075a4f0c86e1f179a67b7d7ea31"
}