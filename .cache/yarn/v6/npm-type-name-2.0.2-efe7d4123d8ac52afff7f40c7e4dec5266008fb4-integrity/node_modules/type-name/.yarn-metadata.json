{
  "manifest": {
    "name": "type-name",
    "description": "Just a reasonable typeof",
    "version": "2.0.2",
    "author": {
      "name": "Takuto Wada",
      "email": "takuto.wada@gmail.com",
      "url": "https://github.com/twada"
    },
    "bugs": {
      "url": "https://github.com/twada/type-name/issues"
    },
    "contributors": [
      {
        "name": "azu",
        "url": "https://github.com/azu"
      },
      {
        "name": "Yosuke Furukawa",
        "url": "https://github.com/yosuke-furukawa"
      },
      {
        "name": "Athan",
        "url": "https://github.com/kgryte"
      },
      {
        "name": "Andrew Moss",
        "url": "https://github.com/inversion"
      }
    ],
    "devDependencies": {
      "browserify": "^13.0.0",
      "derequire": "^2.0.3",
      "dereserve": "^1.0.0",
      "jshint": "~2.8.0",
      "licensify": "^3.1.0",
      "mocha": "^2.4.5",
      "woothee": "^1.3.0",
      "zuul": "^3.10.1"
    },
    "files": [
      "index.js",
      "build/type-name.js"
    ],
    "homepage": "https://github.com/twada/type-name",
    "keywords": [
      "type",
      "typeof"
    ],
    "license": "MIT",
    "main": "./index.js",
    "repository": {
      "type": "git",
      "url": "git://github.com/twada/type-name.git"
    },
    "scripts": {
      "build": "mkdir -p build && browserify index.js --plugin licensify --standalone typeName | dereserve | derequire > ./build/type-name.js",
      "lint": "jshint index.js",
      "preversion": "npm test",
      "test": "npm run lint && mocha && npm run test-es6",
      "test-es6": "./test/travis_es6.sh",
      "test-saucelabs": "zuul -- test/*.js",
      "version": "npm run build && git add -A build"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-type-name-2.0.2-efe7d4123d8ac52afff7f40c7e4dec5266008fb4-integrity/node_modules/type-name/package.json",
    "readmeFilename": "README.md",
    "readme": "type-name\n================================\n\nJust a reasonable `typeof`\n\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][depstat-image]][depstat-url]\n[![License][license-image]][license-url]\n\n[![Sauce Test Status][saucelabs-image]][saucelabs-url]\n\n\nDESCRIPTION\n---------------------------------------\n\n`typeName` function returns reasonable type name for input value.\n\n| description    | input   | result      |\n|:---------------|:--------|:------------|\n| null literal   | `null`  | `'null'`    |\n| undefined value | `undefined` | `'undefined'` |\n| string literal | `'foo'` | `'string'` |\n| number literal | `5` | `'number'` |\n| boolean literal | `false` | `'boolean'` |\n| regexp literal *(Android 4.1+)* | `/^not/` | `'RegExp'` |\n| array literal | `['foo', 4]` | `'Array'` |\n| object literal | `{name: 'bar'}` | `'Object'` *(be careful!)* |\n| function expression | `function () {}` | `'function'` |\n| String object | `new String('foo')` | `'String'` |\n| Number object | `new Number('3')` | `'Number'` |\n| Boolean object |`new Boolean('1')` | `'Boolean'` |\n| Date object | `new Date()` | `'Date'` |\n| RegExp object *(Android 4.1+)* | `new RegExp('^not', 'g')` | `'RegExp'` |\n| Array object | `new Array()` | `'Array'` |\n| Object object | `new Object()` | `'Object'` |\n| Function object | `new Function('x', 'y', 'return x + y')` | `'function'` *(be careful!)* |\n| Error object | `new Error('error!')` | `'Error'` |\n| TypeError object | `new TypeError('type error!')` | `'TypeError'` |\n| NaN | `NaN` | `'number'` |\n| Infinity | `Infinity` | `'number'` |\n| Math | `Math` | `'Math'` |\n| JSON *(IE8+)* | `JSON` | `'JSON'` |\n| arguments object *(IE9+)*  | `(function(){ return arguments; })()` | `'Arguments'` |\n| User-defined constructor | `new Person('alice', 5)` | `'Person'` |\n| Anonymous constructor | `new AnonPerson('bob', 4)` | `''` |\n| Named class | `new(class Foo { constructor() {} })` | `'Foo'` |\n| Anonymous class | `new(class { constructor() {} })` | `''` |\n| Symbol | `Symbol(\"FOO\")` | `'symbol'` |\n| Promise | `Promise.resolve(1)` | `'Promise'` |\n\n\nEXAMPLE\n---------------------------------------\n\n```javascript\nvar typeName = require('type-name');\nvar assert = require('assert');\n\nassert(typeName(null) === 'null');\nassert(typeName(undefined) === 'undefined');\nassert(typeName('foo') === 'string');\nassert(typeName(5) === 'number');\nassert(typeName(false) === 'boolean');\nassert(typeName(/^not/) === 'RegExp');\nassert(typeName(['foo', 4]) === 'Array');\nassert(typeName({name: 'bar'}) === 'Object');\nassert(typeName(function () {}) === 'function');\nassert(typeName(new String('foo')) === 'String');\nassert(typeName(new Number('3')) === 'Number');\nassert(typeName(new Boolean('1')) === 'Boolean');\nassert(typeName(new Date()) === 'Date');\nassert(typeName(new RegExp('^not', 'g')) === 'RegExp');\nassert(typeName(new Array()) === 'Array');\nassert(typeName(new Object()) === 'Object');\nassert(typeName(new Function('x', 'y', 'return x + y')) === 'function');\nassert(typeName(new Error('error!')) === 'Error');\nassert(typeName(new TypeError('type error!')) === 'TypeError');\nassert(typeName(NaN) === 'number');\nassert(typeName(Infinity) === 'number');\nassert(typeName(Math) === 'Math');\nassert(typeName(JSON) === 'JSON'); // IE8+\nassert(typeName((function(){ return arguments; })()) === 'Arguments');  // IE9+\nassert(typeName(Symbol(\"FOO\")) === 'symbol');\nassert(typeName(Promise.resolve(1)) === 'Promise');\n\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\n\nvar AnonPerson = function(name, age) {\n    this.name = name;\n    this.age = age;\n};\n\nassert(typeName(new Person('alice', 5)) === 'Person');\nassert(typeName(new AnonPerson('bob', 4)) === '');\n\nassert(typeName(new(class Foo { constructor() {} })) === 'Foo');\nassert(typeName(new(class { constructor() {} })) === '');\n```\n\n\nINSTALL\n---------------------------------------\n\n### via npm\n\nInstall\n\n    $ npm install --save type-name\n\nUse\n\n```javascript\nvar typeName = require('type-name');\nconsole.log(typeName(anyVar));\n```\n\n#### use type-name npm module on browser\n\n`typeName` function is exported\n\n    <script type=\"text/javascript\" src=\"./path/to/node_modules/type-name/build/type-name.js\"></script>\n\n\n### via bower\n\nInstall\n\n    $ bower install --save type-name\n\nLoad (`typeName` function is exported)\n\n    <script type=\"text/javascript\" src=\"./path/to/bower_components/type-name/build/type-name.js\"></script>\n\nUse\n\n```javascript\nconsole.log(typeName(anyVar));\n```\n\n\nAUTHOR\n---------------------------------------\n* [Takuto Wada](https://github.com/twada)\n\n\nCONTRIBUTORS\n---------------------------------------\n* [azu](https://github.com/azu)\n* [Yosuke Furukawa](https://github.com/yosuke-furukawa)\n* [Athan](https://github.com/kgryte)\n* [Andrew Moss](https://github.com/inversion)\n\n\nLICENSE\n---------------------------------------\nLicensed under the [MIT](https://github.com/twada/type-name/blob/master/LICENSE) license.\n\n\n[npm-url]: https://npmjs.org/package/type-name\n[npm-image]: https://badge.fury.io/js/type-name.svg\n\n[travis-url]: https://travis-ci.org/twada/type-name\n[travis-image]: https://secure.travis-ci.org/twada/type-name.svg?branch=master\n\n[depstat-url]: https://gemnasium.com/twada/type-name\n[depstat-image]: https://gemnasium.com/twada/type-name.svg\n\n[license-url]: https://github.com/twada/type-name/blob/master/LICENSE\n[license-image]: https://img.shields.io/badge/license-MIT-brightgreen.svg\n\n[saucelabs-url]: https://saucelabs.com/u/type-name\n[saucelabs-image]: https://saucelabs.com/browser-matrix/type-name.svg\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2016 Takuto Wada, https://github.com/twada/type-name\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/type-name/-/type-name-2.0.2.tgz#efe7d4123d8ac52afff7f40c7e4dec5266008fb4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/type-name/-/type-name-2.0.2.tgz",
    "hash": "efe7d4123d8ac52afff7f40c7e4dec5266008fb4",
    "integrity": "sha1-7+fUEj2KxSr/9/QMfk3sUmYAj7Q=",
    "registry": "npm",
    "packageName": "type-name",
    "cacheIntegrity": "sha512-kkgkuqR/jKdKO5oh/I2SMu2dGbLXoJq0zkdgbxaqYK+hr9S9edwVVGf+tMUFTx2gH9TN2+Zu9JZ/Njonb3cjhA== sha1-7+fUEj2KxSr/9/QMfk3sUmYAj7Q="
  },
  "registry": "npm",
  "hash": "efe7d4123d8ac52afff7f40c7e4dec5266008fb4"
}