{
  "manifest": {
    "name": "supercluster",
    "version": "7.1.4",
    "description": "A very fast geospatial point clustering library.",
    "main": "dist/supercluster.js",
    "module": "index.js",
    "jsdelivr": "dist/supercluster.min.js",
    "unpkg": "dist/supercluster.min.js",
    "scripts": {
      "pretest": "eslint index.js bench.js test/test.js demo/index.js demo/worker.js",
      "test": "tape -r esm test/test.js",
      "cov": "c8 npm run test",
      "bench": "node --expose-gc -r esm bench.js",
      "build": "mkdirp dist && rollup -c",
      "prepublishOnly": "npm run test && npm run build"
    },
    "files": [
      "index.js",
      "dist/supercluster.js",
      "dist/supercluster.min.js"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/mapbox/supercluster.git"
    },
    "keywords": [
      "clustering",
      "geospatial",
      "markers"
    ],
    "author": {
      "name": "Vladimir Agafonkin"
    },
    "license": "ISC",
    "dependencies": {
      "kdbush": "^3.0.0"
    },
    "devDependencies": {
      "@rollup/plugin-buble": "^0.21.3",
      "@rollup/plugin-node-resolve": "^13.0.5",
      "c8": "^7.10.0",
      "eslint": "^8.0.0",
      "eslint-config-mourner": "^3.0.0",
      "esm": "^3.2.25",
      "mkdirp": "^1.0.4",
      "rollup": "^2.58.0",
      "rollup-plugin-terser": "^7.0.2",
      "tape": "^5.3.1"
    },
    "eslintConfig": {
      "extends": "mourner",
      "rules": {
        "camelcase": 0
      }
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-supercluster-7.1.4-6762aabfd985d3390b49f13b815567d5116a828a-integrity/node_modules/supercluster/package.json",
    "readmeFilename": "README.md",
    "readme": "# supercluster [![Simply Awesome](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects) [![Build Status](https://travis-ci.org/mapbox/supercluster.svg?branch=main)](https://travis-ci.org/mapbox/supercluster)\n\nA very fast JavaScript library for geospatial point clustering for browsers and Node.\n\n```html\n<script src=\"https://unpkg.com/supercluster@7.1.2/dist/supercluster.min.js\"></script>\n```\n\n```js\nconst index = new Supercluster({\n    radius: 40,\n    maxZoom: 16\n});\nindex.load(points);\nindex.getClusters([-180, -85, 180, 85], 2);\n```\n\nClustering 6 million points in Leaflet:\n\n![clusters2](https://cloud.githubusercontent.com/assets/25395/11857351/43407b46-a40c-11e5-8662-e99ab1cd2cb7.gif)\n\n## Install\n\nInstall using NPM (`npm install supercluster`) or Yarn (`yarn add supercluster`), then:\n\n```js\n// import as a ES module\nimport Supercluster from 'supercluster';\n\n// or require in Node / Browserify\nconst Supercluster = require('supercluster');\n```\n\nOr use a browser build directly:\n\n```html\n<script src=\"https://unpkg.com/supercluster@7.1.2/dist/supercluster.min.js\"></script>\n```\n\n## Methods\n\n#### `load(points)`\n\nLoads an array of [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) objects. Each feature's `geometry` must be a [GeoJSON Point](https://tools.ietf.org/html/rfc7946#section-3.1.2). Once loaded, index is immutable.\n\n#### `getClusters(bbox, zoom)`\n\nFor the given `bbox` array (`[westLng, southLat, eastLng, northLat]`) and integer `zoom`, returns an array of clusters and points as [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) objects.\n\n#### `getTile(z, x, y)`\n\nFor a given zoom and x/y coordinates, returns a [geojson-vt](https://github.com/mapbox/geojson-vt)-compatible JSON tile object with cluster/point features.\n\n#### `getChildren(clusterId)`\n\nReturns the children of a cluster (on the next zoom level) given its id (`cluster_id` value from feature properties).\n\n#### `getLeaves(clusterId, limit = 10, offset = 0)`\n\nReturns all the points of a cluster (given its `cluster_id`), with pagination support:\n`limit` is the number of points to return (set to `Infinity` for all points),\nand `offset` is the amount of points to skip (for pagination).\n\n#### `getClusterExpansionZoom(clusterId)`\n\nReturns the zoom on which the cluster expands into several children (useful for \"click to zoom\" feature) given the cluster's `cluster_id`.\n\n## Options\n\n| Option     | Default | Description                                                       |\n|------------|---------|-------------------------------------------------------------------|\n| minZoom    | 0       | Minimum zoom level at which clusters are generated.               |\n| maxZoom    | 16      | Maximum zoom level at which clusters are generated.               |\n| minPoints  | 2       | Minimum number of points to form a cluster.                       |\n| radius     | 40      | Cluster radius, in pixels.                                        |\n| extent     | 512     | (Tiles) Tile extent. Radius is calculated relative to this value. |\n| nodeSize   | 64      | Size of the KD-tree leaf node. Affects performance.               |\n| log        | false   | Whether timing info should be logged.                             |\n| generateId | false   | Whether to generate ids for input features in vector tiles.       |\n\n### Property map/reduce options\n\nIn addition to the options above, supercluster supports property aggregation with the following two options:\n\n- `map`: a function that returns cluster properties corresponding to a single point.\n- `reduce`: a reduce function that merges properties of two clusters into one.\n\nExample of setting up a `sum` cluster property that accumulates the sum of `myValue` property values:\n\n```js\nconst index = new Supercluster({\n    map: (props) => ({sum: props.myValue}),\n    reduce: (accumulated, props) => { accumulated.sum += props.sum; }\n});\n```\n\nNote that `reduce` must not mutate the second argument (`props`).\n\n## Developing Supercluster\n\n```\nnpm install       # install dependencies\nnpm run build     # generate dist/supercluster.js and dist/supercluster.min.js\nnpm test          # run tests\n```\n",
    "licenseText": "ISC License\n\nCopyright (c) 2021, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/supercluster/-/supercluster-7.1.4.tgz#6762aabfd985d3390b49f13b815567d5116a828a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/supercluster/-/supercluster-7.1.4.tgz",
    "hash": "6762aabfd985d3390b49f13b815567d5116a828a",
    "integrity": "sha512-GhKkRM1jMR6WUwGPw05fs66pOFWhf59lXq+Q3J3SxPvhNcmgOtLRV6aVQPMRsmXdpaeFJGivt+t7QXUPL3ff4g==",
    "registry": "npm",
    "packageName": "supercluster",
    "cacheIntegrity": "sha512-GhKkRM1jMR6WUwGPw05fs66pOFWhf59lXq+Q3J3SxPvhNcmgOtLRV6aVQPMRsmXdpaeFJGivt+t7QXUPL3ff4g== sha1-Z2Kqv9mF0zkLSfE7gVVn1RFqgoo="
  },
  "registry": "npm",
  "hash": "6762aabfd985d3390b49f13b815567d5116a828a"
}