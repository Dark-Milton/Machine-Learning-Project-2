{
  "manifest": {
    "name": "@choojs/findup",
    "description": "Find a file by walking up the directory tree",
    "version": "0.2.1",
    "author": {
      "name": "Filirom1",
      "email": "filirom1@gmail.com"
    },
    "bin": {
      "findup": "bin/findup.js"
    },
    "bugs": {
      "url": "https://github.com/choojs/findup/issues"
    },
    "dependencies": {
      "commander": "^2.15.1"
    },
    "devDependencies": {
      "chai": "^4.1.2",
      "mocha": "^5.0.5"
    },
    "homepage": "https://github.com/choojs/findup",
    "license": "MIT",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/choojs/findup.git"
    },
    "scripts": {
      "test": "mocha ./test/*.js"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-@choojs-findup-0.2.1-ac13c59ae7be6e1da64de0779a0a7f03d75615a3-integrity/node_modules/@choojs/findup/package.json",
    "readmeFilename": "README.md",
    "readme": "[![build status](https://secure.travis-ci.org/choojs/findup.png)](http://travis-ci.org/choojs/findup)\n@choojs/findup\n=======\n\n> This is a fork of [Filirom1/findup](https://github.com/Filirom1/findup), pending [#16](https://github.com/Filirom1/findup/pull/16).\n\n### Install\n\n```sh\nnpm install -g @choojs/findup\n```\n\n### Usage\n\nFind up a file in ancestor's dir\n\n\n    .\n    ├── config.json\n    └── f\n        └── e\n            └── d\n                └── c\n                    ├── b\n                    │   └── a\n                    └── config.json\n\n### Options\n\n- `maxdepth`: (Number, default -1) How far to traverse before giving up. If maxdepth is `-1`, then there is no limit.\n\n#### Async\n\nfindup(dir, fileName, options, callback)\nfindup(dir, iterator, options, callback) with `iterator(dir, cb)` where cb only accept `true` or `false`\n\n```js\nvar findup = require('@choojs/findup');\n\n\nfindup(__dirname + '/f/e/d/c/b/a', 'config.json', function(err, dir){\n  // if(e) e === new Error('not found')\n  // dir === '/f/e/d/c'\n});\n```\n\nor\n\n```js\nfindup(__dirname + '/f/e/d/c/b/a', function(dir, cb){\n  require('path').exists(dir + '/config.json', cb);\n}, function(err, dir){\n  // if(e) e === new Error('not found')\n  // dir === '/f/e/d/c'\n});\n```\n\n#### EventEmitter\n\nfindup(dir, fileName, options)\n\n```js\nvar findup = require('@choojs/findup');\nvar fup = findup(__dirname + '/f/e/d/c/b/a', 'config.json');\n```\n\nfindup(dir, iterator, options) with `iterator(dir, cb)` where cb only accept `true` or `false`\n\n```js\nvar findup = require('@choojs/findup');\nvar fup = findup(__dirname + '/f/e/d/c/b/a', function(dir, cb){\n  require('path').exists(dir + '/config.json', cb);\n});\n```\n\nfindup return an EventEmitter. 3 events are emitted: `found`, `error`, `end`\n\n`found` event is emitted each time a file is found.\n\nYou can stop the traversing by calling `stop` manually.\n\n```js\nfup.on('found', function(dir){\n  // dir === '/f/e/d/c'\n  fup.stop();\n});\n```\n\n`error` event is emitted when error happens\n\n```js\nfup.on('error', function(e){\n  // if(e) e === new Error('not found')\n});\n```\n\n`end` event is emitted at the end of the traversing or after `stop()` is\ncalled.\n\n```js\nfup.on('end', function(){\n  // happy end\n});\n```\n\n#### Sync\n\nfindup(dir, fileName)\nfindup(dir, iteratorSync) with `iteratorSync` return `true` or `false`\n```js\nvar findup = require('@choojs/findup');\n\ntry{\n  var dir = findup.sync(__dirname + '/f/e/d/c/b/a', 'config.json'); // dir === '/f/e/d/c'\n}catch(e){\n  // if(e) e === new Error('not found')\n}\n```\n\n#### CLI\n```js\nnpm install -g @choojs/findup\n\n$ cd test/fixture/f/e/d/c/b/a/\n$ findup package.json\n/root/findup/package.json\n```\n\nUsage\n\n```\n$ findup -h\n\nUsage: findup [FILE]\n\n    --name, -n       The name of the file to found\n    --dir, -d        The directoy where we will start walking up    $PWD\n    --help, -h       show usage                                     false\n    --verbose, -v    print log                                      false\n```\n\n### LICENSE MIT\n\n### Read the tests :)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@choojs/findup/-/findup-0.2.1.tgz#ac13c59ae7be6e1da64de0779a0a7f03d75615a3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@choojs/findup/-/findup-0.2.1.tgz",
    "hash": "ac13c59ae7be6e1da64de0779a0a7f03d75615a3",
    "integrity": "sha512-YstAqNb0MCN8PjdLCDfRsBcGVRN41f3vgLvaI0IrIcBp4AqILRSS0DeWNGkicC+f/zRIPJLc+9RURVSepwvfBw==",
    "registry": "npm",
    "packageName": "@choojs/findup",
    "cacheIntegrity": "sha512-YstAqNb0MCN8PjdLCDfRsBcGVRN41f3vgLvaI0IrIcBp4AqILRSS0DeWNGkicC+f/zRIPJLc+9RURVSepwvfBw== sha1-rBPFmue+bh2mTeB3mgp/A9dWFaM="
  },
  "registry": "npm",
  "hash": "ac13c59ae7be6e1da64de0779a0a7f03d75615a3"
}