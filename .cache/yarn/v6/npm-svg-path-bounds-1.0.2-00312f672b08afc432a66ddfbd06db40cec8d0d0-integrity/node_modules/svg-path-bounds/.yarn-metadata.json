{
  "manifest": {
    "name": "svg-path-bounds",
    "version": "1.0.2",
    "description": "Get bounding box of an svg path data",
    "main": "index.js",
    "scripts": {
      "test": "node test"
    },
    "keywords": [
      "svg",
      "boundaries",
      "normalize",
      "coordinate",
      "range",
      "clip",
      "mask",
      "svg path",
      "path"
    ],
    "author": {
      "name": "Dima Yv",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "dependencies": {
      "abs-svg-path": "^0.1.1",
      "is-svg-path": "^1.0.1",
      "normalize-svg-path": "^1.0.0",
      "parse-svg-path": "^0.1.2"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dfcreative/svg-path-bounds.git"
    },
    "bugs": {
      "url": "https://github.com/dfcreative/svg-path-bounds/issues"
    },
    "homepage": "https://github.com/dfcreative/svg-path-bounds#readme",
    "devDependencies": {
      "tape": "^4.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-svg-path-bounds-1.0.2-00312f672b08afc432a66ddfbd06db40cec8d0d0-integrity/node_modules/svg-path-bounds/package.json",
    "readmeFilename": "readme.md",
    "readme": "# svg-path-bounds [![Build Status](https://travis-ci.org/dfcreative/svg-path-bounds.svg?branch=master)](https://travis-ci.org/dy/svg-path-bounds)\n\nRetrieve bounding box from svg path data.\n\n## Usage\n\n[![npm install svg-path-bounds](https://nodei.co/npm/svg-path-bounds.png?mini=true)](https://npmjs.org/package/svg-path-bounds/)\n\n```js\nconst getBounds = require('svg-path-bounds')\n\nlet [left, top, right, bottom] = getBounds('M0 0L10 10 20 0Z') // [0, 0, 20, 10]\n```\n\n## API\n\n### bounds = getBounds(path|segments)\n\nCalculate bounding box for [svg path data](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d) string or [parsed path segments](https://www.npmjs.com/package/parse-svg-path) array. The box is detected by controlling points, not the real path.\n\n## Related\n\n* [parse-svg-path](https://npmjs.org/parse-svg-path) - return svg path data segments\n* [abs-svg-path](https://npmjs.org/abs-svg-path) - convert svg path to absolute values\n* [rel-svg-path](https://npmjs.org/abs-svg-path) - convert svg path to relative values\n* [normalize-svg-path](https://npmjs.org/normalize-svg-path) - make path consist of only bezier curve segments\n* [draw-svg-path](https://npmjs.org/draw-svg-path) - create canvas shape based on svg path data\n* [normalize-svg-coords](https://npmjs.org/normalize-svg-coords) - bring svg path coordinates to any linear range\n\n## Similar\n\n* [svg-boundings](https://www.npmjs.com/package/svg-boundings)\n* [svg-path-bounding-box](https://github.com/icons8/svg-path-bounding-box)\n\n## License\n\nMIT Â© Dima Yv\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/svg-path-bounds/-/svg-path-bounds-1.0.2.tgz#00312f672b08afc432a66ddfbd06db40cec8d0d0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/svg-path-bounds/-/svg-path-bounds-1.0.2.tgz",
    "hash": "00312f672b08afc432a66ddfbd06db40cec8d0d0",
    "integrity": "sha512-H4/uAgLWrppIC0kHsb2/dWUYSmb4GE5UqH06uqWBcg6LBjX2fu0A8+JrO2/FJPZiSsNOKZAhyFFgsLTdYUvSqQ==",
    "registry": "npm",
    "packageName": "svg-path-bounds",
    "cacheIntegrity": "sha512-H4/uAgLWrppIC0kHsb2/dWUYSmb4GE5UqH06uqWBcg6LBjX2fu0A8+JrO2/FJPZiSsNOKZAhyFFgsLTdYUvSqQ== sha1-ADEvZysIr8Qypm3fvQbbQM7I0NA="
  },
  "registry": "npm",
  "hash": "00312f672b08afc432a66ddfbd06db40cec8d0d0"
}