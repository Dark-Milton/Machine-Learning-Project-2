{
  "manifest": {
    "name": "gl-mat4",
    "version": "1.2.0",
    "description": "gl-matrix's mat4, split into smaller pieces",
    "main": "index.js",
    "scripts": {
      "get-docs": "cat *.js | dox --api"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/stackgl/gl-mat4"
    },
    "keywords": [
      "gl-matrix",
      "matrix",
      "math",
      "gl",
      "mat4",
      "mat4x4",
      "4x4",
      "mat",
      "vector",
      "maths"
    ],
    "license": "Zlib",
    "contributors": [
      {
        "name": "Brandon Jones",
        "email": "tojiro@gmail.com"
      },
      {
        "name": "Colin MacKenzie IV",
        "email": "sinisterchipmunk@gmail.com"
      }
    ],
    "dependencies": {},
    "devDependencies": {
      "dox": "git://github.com/hughsk/dox#api-context"
    },
    "bugs": {
      "url": "https://github.com/stackgl/gl-mat4/issues"
    },
    "homepage": "https://github.com/stackgl/gl-mat4",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-gl-mat4-1.2.0-49d8a7636b70aa00819216635f4a3fd3f4669b26-integrity/node_modules/gl-mat4/package.json",
    "readmeFilename": "README.md",
    "readme": "# gl-mat4 [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nPart of a fork of [@toji](http://github.com/toji)'s\n[gl-matrix](http://github.com/toji/gl-matrix) split into smaller pieces: this\npackage contains `glMatrix.mat4`.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/gl-mat4.png)](https://nodei.co/npm/gl-mat4/)\n\n### `mat4 = require('gl-mat4')`\n\nWill load all of the module's functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.\n\nFor example, the following are equivalent:\n\n``` javascript\nvar scale = require('gl-mat4').scale\nvar scale = require('gl-mat4/scale')\n```\n\n## API\n\n  - [adjoint()](#adjointoutmat4-amat4)\n  - [clone()](#cloneamat4)\n  - [copy()](#copyoutmat4-amat4)\n  - [create()](#create)\n  - [determinant()](#determinantamat4)\n  - [fromQuat()](#fromquatoutmat4-qquat4)\n  - [fromRotation()](#fromrotationoutmat4-radnumber-axisvec3)\n  - [fromRotationTranslation()](#fromrotationtranslationoutmat4-qquat4-vvec3)\n  - [fromScaling()](#fromscalingoutmat4-vvec3)\n  - [fromTranslation()](#fromtranslationoutmat4-vvec3)\n  - [fromXRotation()](#fromxrotationoutmat4-radnumber)\n  - [fromYRotation()](#fromyrotationoutmat4-radnumber)\n  - [fromZRotation()](#fromzrotationoutmat4-radnumber)\n  - [frustum()](#frustumoutmat4-leftnumber-rightnumber-bottomnumber-topnumber-nearnumber-farnumber)\n  - [identity()](#identityoutmat4)\n  - [invert()](#invertoutmat4-amat4)\n  - [lookAt()](#lookatoutmat4-eyevec3-centervec3-upvec3)\n  - [multiply()](#multiplyoutmat4-amat4-bmat4)\n  - [ortho()](#orthooutmat4-leftnumber-rightnumber-bottomnumber-topnumber-nearnumber-farnumber)\n  - [perspective()](#perspectiveoutmat4-fovynumber-aspectnumber-nearnumber-farnumber)\n  - [perspectiveFromFieldOfView()](#perspectivefromfieldofviewoutmat4-fovobject-nearnumber-farnumber)\n  - [rotate()](#rotateoutmat4-amat4-radnumber-axisvec3)\n  - [rotateX()](#rotatexoutmat4-amat4-radnumber)\n  - [rotateY()](#rotateyoutmat4-amat4-radnumber)\n  - [rotateZ()](#rotatezoutmat4-amat4-radnumber)\n  - [scale()](#scaleoutmat4-amat4-vvec3)\n  - [str()](#strmatmat4)\n  - [translate()](#translateoutmat4-amat4-vvec3)\n  - [transpose()](#transposeoutmat4-amat4)\n\n## adjoint(out:mat4, a:mat4)\n\n  Calculates the adjugate of a mat4\n\n## clone(a:mat4)\n\n  Creates a new mat4 initialized with values from an existing matrix\n\n## copy(out:mat4, a:mat4)\n\n  Copy the values from one mat4 to another\n\n## create()\n\n  Creates a new identity mat4\n\n## determinant(a:mat4)\n\n  Calculates the determinant of a mat4\n\n## fromQuat(out:mat4, q:quat4)\n\n  Creates a matrix from a quaternion rotation.\n\n## fromRotation(out:mat4, rad:number, axis:vec3)\n\n  Creates a matrix from a given angle around a given axis\n  This is equivalent to (but much faster than):\n\n```js\n  mat4.identity(dest);\n  mat4.rotate(dest, dest, rad, axis);\n```\n\n## fromRotationTranslation(out:mat4, q:quat4, v:vec3)\n\n  Creates a matrix from a quaternion rotation and vector translation. This is equivalent to (but much faster than):\n  \n```js\n  mat4.identity(dest);\n  mat4.translate(dest, vec);\n  var quatMat = mat4.create();\n  quat4.toMat4(quat, quatMat);\n  mat4.multiply(dest, quatMat);\n```\n\n## fromScaling(out:mat4, v:vec3)\n  Creates a matrix from a vector scaling. This is equivalent to (but much faster than):\n \n```js\n  mat4.identity(dest);\n  mat4.translate(dest, dest, vec);\n```\n\n## fromTranslation(out:mat4, v:vec3)\n  Creates a matrix from a vector translation. This is equivalent to (but much faster than):\n \n```js\n  mat4.identity(dest);\n  mat4.translate(dest, dest, vec);\n```\n\n## fromTranslation(out:mat4, v:vec3)\n  Creates a matrix from a vector translation\n  This is equivalent to (but much faster than):\n \n```js\n  mat4.identity(dest);\n  mat4.translate(dest, dest, vec);\n```\n\n## fromXRotation(out:mat4, rad:Number)\n\n  Creates a matrix from the given angle around the X axis\n  This is equivalent to (but much faster than):\n  \n```js\n  mat4.identity(dest)\n  mat4.rotateX(dest, dest, rad)\n```\n\n## fromYRotation(out:mat4, rad:Number)\n\n  Creates a matrix from the given angle around the Y axis\n  This is equivalent to (but much faster than):\n  \n```js\n  mat4.identity(dest)\n  mat4.rotateY(dest, dest, rad)\n```\n\n## fromZRotation(out:mat4, rad:Number)\n\n  Creates a matrix from the given angle around the Z axis\n  This is equivalent to (but much faster than):\n  \n```js\n  mat4.identity(dest)\n  mat4.rotateZ(dest, dest, rad)\n```\n\n## frustum(out:mat4, left:Number, right:Number, bottom:Number, top:Number, near:Number, far:Number)\n\n  Generates a frustum matrix with the given bounds\n\n## identity(out:mat4)\n\n  Set a mat4 to the identity matrix\n\n## invert(out:mat4, a:mat4)\n\n  Inverts a mat4\n\n## lookAt(out:mat4, eye:vec3, center:vec3, up:vec3)\n\n  Generates a look-at matrix with the given eye position, focal point, and up axis\n\n## multiply(out:mat4, a:mat4, b:mat4)\n\n  Multiplies two mat4's\n\n## ortho(out:mat4, left:number, right:number, bottom:number, top:number, near:number, far:number)\n\n  Generates a orthogonal projection matrix with the given bounds\n\n## perspective(out:mat4, fovy:number, aspect:number, near:number, far:number)\n\n  Generates a perspective projection matrix with the given bounds\n\n## perspectiveFromFieldOfView(out:mat4, fov:object, near:number, far:number)\n\n  Generates a perspective projection matrix with the given field of view.\n\n## rotate(out:mat4, a:mat4, rad:Number, axis:vec3)\n\n  Rotates a mat4 by the given angle\n\n## rotateX(out:mat4, a:mat4, rad:Number)\n\n  Rotates a matrix by the given angle around the X axis\n\n## rotateY(out:mat4, a:mat4, rad:Number)\n\n  Rotates a matrix by the given angle around the Y axis\n\n## rotateZ(out:mat4, a:mat4, rad:Number)\n\n  Rotates a matrix by the given angle around the Z axis\n\n## scale(out:mat4, a:mat4, v:vec3)\n\n  Scales the mat4 by the dimensions in the given vec3\n\n## str(mat:mat4)\n\n  Returns a string representation of a mat4\n\n## translate(out:mat4, a:mat4, v:vec3)\n\n  Translate a mat4 by the given vector\n\n## transpose(out:mat4, a:mat4)\n\n  Transpose the values of a mat4\n\n## License\n\n[zlib](http://en.wikipedia.org/wiki/Zlib_License). See [LICENSE.md](https://github.com/stackgl/gl-mat4/blob/master/LICENSE.md) for details.\n",
    "licenseText": "Copyright (c) 2013 Brandon Jones, Colin MacKenzie IV\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n 1. The origin of this software must not be misrepresented you must not\n    claim that you wrote the original software. If you use this software\n    in a product, an acknowledgment in the product documentation would be\n    appreciated but is not required.\n\n 2. Altered source versions must be plainly marked as such, and must not\n    be misrepresented as being the original software.\n\n 3. This notice may not be removed or altered from any source distribution."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gl-mat4/-/gl-mat4-1.2.0.tgz#49d8a7636b70aa00819216635f4a3fd3f4669b26",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gl-mat4/-/gl-mat4-1.2.0.tgz",
    "hash": "49d8a7636b70aa00819216635f4a3fd3f4669b26",
    "integrity": "sha512-sT5C0pwB1/e9G9AvAoLsoaJtbMGjfd/jfxo8jMCKqYYEnjZuFvqV5rehqar0538EmssjdDeiEWnKyBSTw7quoA==",
    "registry": "npm",
    "packageName": "gl-mat4",
    "cacheIntegrity": "sha512-sT5C0pwB1/e9G9AvAoLsoaJtbMGjfd/jfxo8jMCKqYYEnjZuFvqV5rehqar0538EmssjdDeiEWnKyBSTw7quoA== sha1-SdinY2twqgCBkhZjX0o/0/RmmyY="
  },
  "registry": "npm",
  "hash": "49d8a7636b70aa00819216635f4a3fd3f4669b26"
}