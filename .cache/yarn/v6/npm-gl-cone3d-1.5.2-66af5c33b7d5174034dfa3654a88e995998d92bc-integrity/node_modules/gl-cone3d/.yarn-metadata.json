{
  "manifest": {
    "name": "gl-cone3d",
    "version": "1.5.2",
    "description": "3D cone plot",
    "main": "cone.js",
    "dependencies": {
      "colormap": "^2.3.1",
      "gl-buffer": "^2.1.2",
      "gl-mat4": "^1.2.0",
      "gl-shader": "^4.2.1",
      "gl-texture2d": "^2.1.0",
      "gl-vao": "^1.3.0",
      "gl-vec3": "^1.1.3",
      "glsl-inverse": "^1.0.0",
      "glsl-out-of-range": "^1.0.4",
      "glsl-specular-cook-torrance": "^2.0.1",
      "glslify": "^7.0.0",
      "ndarray": "^1.0.18"
    },
    "devDependencies": {
      "3d-view-controls": "^2.2.2",
      "bound-points": "^1.0.0",
      "canvas-fit": "^1.5.0",
      "chttps": "^1.0.6",
      "gl-axes3d": "^1.5.3",
      "gl-select-static": "^2.0.6",
      "gl-spikes3d": "^1.0.10"
    },
    "scripts": {
      "postshrinkwrap": "chttps .",
      "build-example": "browserify -o build/example.js example/cone.js && browserify -o build/example_sparse.js example/cone_sparse.js && browserify -o build/example_minimal.js example/cone_minimal.js && browserify -o build/example_single.js example/cone_single.js",
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/gl-vis/gl-cone3d.git"
    },
    "keywords": [
      "webgl",
      "cone plot"
    ],
    "browserify": {
      "transform": [
        "glslify"
      ]
    },
    "author": {
      "name": "Mikola Lysenko, Ilmari Heikkinen"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gl-vis/gl-cone3d/issues"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-gl-cone3d-1.5.2-66af5c33b7d5174034dfa3654a88e995998d92bc-integrity/node_modules/gl-cone3d/package.json",
    "readmeFilename": "README.md",
    "readme": "gl-cone3d\n=====================\nVisualization module for vector fields.\n\n# Example\n\n```javascript\nvar createScene    = require('gl-plot3d')\nvar createConePlot = require('gl-cone3d')\nvar createMesh     = createConePlot.createConeMesh\n\nvar wind           = require('dataset-wind')\n\nvar scene = createScene()\n\nvar bounds = [];\n\nvar conePlot = createConePlot({\n    positions: wind.positions,\n    vectors: wind.vectors,\n    coneSize: 4,\n    colormap: 'portland'\n}, bounds)\n\nvar mesh = createMesh(gl, conePlot)\n\nscene.add(mesh)\n```\n\n[Try out the example in your browser](http://gl-vis.github.io/gl-cone3d/)\n\n# Install\n\n```\nnpm i gl-cone3d\n```\n\n# Basic interface\n\n## Constructor\n\n#### `var conePlot = require('gl-cone3d')(params, bounds)`\nCreates a cone plot of a vector field.\n\n* `params` is an object that has the following properties:\n\n    + `positions` *(Required)* An array of positions determining the location of the cones, encoded as arrays\n    + `vectors` *(Required)* An array of vectors for the vector field, encoded as arrays\n    + `coneSize` Size of the cones, scaled so that the reference cone size for the maximum vector magnitude is 1\n    + `absoluteConeSize` Size of the cones, scaled so that the reference cone size for vector magnitude 1 is one grid unit.\n    + `coneOffset` The position of the cone with regard to the cone location. Ranges from 0 to 1 where 0 puts the center of the cone base at the cone location, and 1 puts the tip at the cone location.\n    + `colormap` Colormap for the cone plot.\n\n**Returns** A cone plot object that can be passed to gl-mesh3d.\n\n# Credits\n(c) 2013-2017 Mikola Lysenko, Ilmari Heikkinen. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013-2017 Mikola Lysenko, Ilmari Heikkinen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gl-cone3d/-/gl-cone3d-1.5.2.tgz#66af5c33b7d5174034dfa3654a88e995998d92bc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gl-cone3d/-/gl-cone3d-1.5.2.tgz",
    "hash": "66af5c33b7d5174034dfa3654a88e995998d92bc",
    "integrity": "sha512-1JNeHH4sUtUmDA4ZK7Om8/kShwb8IZVAsnxaaB7IPRJsNGciLj1sTpODrJGeMl41RNkex5kXD2SQFrzyEAR2Rw==",
    "registry": "npm",
    "packageName": "gl-cone3d",
    "cacheIntegrity": "sha512-1JNeHH4sUtUmDA4ZK7Om8/kShwb8IZVAsnxaaB7IPRJsNGciLj1sTpODrJGeMl41RNkex5kXD2SQFrzyEAR2Rw== sha1-Zq9cM7fVF0A036NlSojplZmNkrw="
  },
  "registry": "npm",
  "hash": "66af5c33b7d5174034dfa3654a88e995998d92bc"
}