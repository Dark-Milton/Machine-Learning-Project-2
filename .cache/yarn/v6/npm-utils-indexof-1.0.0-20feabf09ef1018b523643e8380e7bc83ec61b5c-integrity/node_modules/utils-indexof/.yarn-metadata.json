{
  "manifest": {
    "name": "utils-indexof",
    "version": "1.0.0",
    "description": "Returns the first index at which a given element can be found.",
    "author": {
      "name": "Athan Reines",
      "email": "kgryte@gmail.com"
    },
    "contributors": [
      {
        "name": "Athan Reines",
        "email": "kgryte@gmail.com"
      }
    ],
    "scripts": {
      "test": "if [ \"${TRAVIS}\" ]; then npm run test-ci; else npm run test-local; fi",
      "test-local": "tape \"./test/*.js\" | tap-spec",
      "test-ci": "npm run test-local && xvfb-run npm run test-browsers",
      "test-cov": "istanbul cover --dir ./reports/coverage --report lcov tape -- \"./test/*.js\"",
      "test-browsers": "browserify ./test/*.js | testling | tap-spec",
      "coverage": "istanbul cover --dir ./reports/codecov/coverage --report lcovonly tape -- \"./test/*.js\" && cat ./reports/codecov/coverage/lcov.info | codecov && rm -rf ./reports/codecov"
    },
    "main": "./lib",
    "repository": {
      "type": "git",
      "url": "git://github.com/kgryte/utils-indexof.git"
    },
    "keywords": [
      "utilities",
      "utility",
      "utils",
      "util",
      "indexof",
      "array",
      "object",
      "array-like",
      "string",
      "search",
      "find",
      "locate",
      "index",
      "polyfill",
      "ponyfill",
      "arr",
      "str",
      "obj"
    ],
    "bugs": {
      "url": "https://github.com/kgryte/utils-indexof/issues"
    },
    "dependencies": {
      "validate.io-array-like": "^1.0.1",
      "validate.io-integer-primitive": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "13.x.x",
      "codecov": "1.x.x",
      "istanbul": "^0.4.1",
      "jshint": "2.x.x",
      "jshint-stylish": "2.x.x",
      "tap-spec": "4.x.x",
      "tape": "4.x.x",
      "testling": "1.x.x"
    },
    "testling": {
      "files": [
        "test/*.js"
      ],
      "browsers": [
        "iexplore/6.0..latest",
        "firefox/3.0..latest",
        "firefox/nightly",
        "chrome/4.0..latest",
        "chrome/canary",
        "opera/10.0..latest",
        "opera/next",
        "safari/4.0..latest",
        "ipad/6.0..latest",
        "iphone/6.0..latest",
        "android-browser/4.2..latest"
      ]
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-utils-indexof-1.0.0-20feabf09ef1018b523643e8380e7bc83ec61b5c-integrity/node_modules/utils-indexof/package.json",
    "readmeFilename": "README.md",
    "readme": "indexOf\n===\n[![NPM version][npm-image]][npm-url] [![Build Status][build-image]][build-url] [![Coverage Status][coverage-image]][coverage-url] [![Dependencies][dependencies-image]][dependencies-url]\n\n> Returns the first index at which a given element can be found.\n\n\n## Installation\n\n``` bash\n$ npm install utils-indexof\n```\n\n\n## Usage\n\n``` javascript\nvar indexOf = require( 'utils-indexof' );\n```\n\n#### indexOf( arr, searchElement[, fromIndex] )\n\nReturns the first index at which a given element can be found.\n\n``` javascript\nvar arr = [ 4, 3, 2, 1 ];\n\nvar idx = indexOf( arr, 3 );\n// returns 1\n```\n\nIf a `searchElement` is __not__ present in an input `array`, the `function` returns `-1`.\n\n``` javascript\nvar arr = [ 4, 3, 2, 1 ];\n\nvar idx = indexOf( arr, 5 );\n// returns -1\n```\n\nBy default, the implementation searches an input `array` beginning from the first element. To start searching from a different element, specify a `fromIndex`.\n\n``` javascript\nvar arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n\nvar idx = indexOf( arr, 2, 3 );\n// returns 5\n```\n\nIf a `fromIndex` exceeds the input `array` length, the `function` returns `-1`.\n\n``` javascript\nvar arr = [ 1, 2, 3, 4, 2, 5 ];\n\nvar idx = indexOf( arr, 2, 10 );\n// returns -1\n```\n\nIf a `fromIndex` is less than `0`, the starting index is determined relative to the last index (with the last index being equivalent to `fromIndex = -1`).\n\n``` javascript\nvar arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n\nvar idx = indexOf( arr, 2, -4 );\n// returns 5\n\nidx = indexOf( arr, 2, -1 );\n// returns 7\n```\n\nIf `fromIndex` is less than `0` __and__ its absolute value exceeds the input `array` length, the `function` searches the entire input `array`.\n\n``` javascript\nvar arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n\nvar idx = indexOf( arr, 2, -10 );\n// returns 1\n```\n\nThe first argument is not limited to `arrays`, but may be any [array-like][validate.io-array-like] `object`.\n\n``` javascript\nvar str = 'bebop';\n\nvar idx = indexOf( str, 'o' );\n// returns 3\n```\n\n\n## Notes\n\n* \tSearch is performed using __strict equality__ comparison. Thus,\n\t\n\t``` javascript\n\tvar arr = [ 1, [1,2,3], 3 ];\n\n\tvar idx = indexOf( arr, [1,2,3] );\n\t// returns -1\n\t```\n\n*\tThis implementation is __not__ [ECMAScript Standard][ecma-262] compliant. Notably, the [standard][ecma-262] specifies that an `array` be searched by calling `hasOwnProperty` (thus, for most cases, incurring a performance penalty), and the [standard][ecma-262] does __not__ accommodate a `searchElement` equal to `NaN`. In this implementation, the following is possible:\n\n\t``` javascript\n\t// Locate the first element which is NaN...\n\tvar arr = [ 1, NaN, 2, NaN ];\n\n\tvar idx = indexOf( arr, NaN );\n\t// returns 1\n\n\t// Prototype properties may be searched as well...\n\tfunction Obj() {\n\t\tthis[ 0 ] = 'beep';\n\t\tthis[ 1 ] = 'boop';\n\t\tthis[ 2 ] = 'woot';\n\t\tthis[ 3 ] = 'bap';\n\t\tthis.length = 4;\n\t\treturn this;\n\t}\n\tObj.prototype[ 2 ] = 'bop';\n\n\tvar obj = new Obj();\n\t\n\tidx = indexOf( obj, 'bop' );\n\t// returns -1\n\n\tdelete obj[ 2 ];\n\n\tidx = indexOf( obj, 'bop' );\n\t// returns 2\n\t```\n\n\n## Examples\n\n``` javascript\nvar indexOf = require( 'utils-indexof' );\n\nvar arr;\nvar obj;\nvar str;\nvar idx;\nvar i;\n\n// Arrays...\narr = new Array( 10 );\nfor ( i = 0; i < arr.length; i++ ) {\n\tarr[ i ] = i * 10;\n}\nidx = indexOf( arr, 40 );\n\nconsole.log( idx );\n// returns 4\n\n\n// Array-like objects...\nobj = {\n\t'0': 'beep',\n\t'1': 'boop',\n\t'2': 'bap',\n\t'3': 'bop',\n\t'length': 4\n};\n\nidx = indexOf( obj, 'bap' );\n\nconsole.log( idx );\n// returns 2\n\n\n// Strings...\nstr = 'beepboopbop';\n\nidx = indexOf( str, 'o' );\n\nconsole.log( idx );\n// returns 5\n```\n\nTo run the example code from the top-level application directory,\n\n``` bash\n$ node ./examples/index.js\n```\n\n\n---\n## Tests\n\n### Unit\n\nThis repository uses [tape][tape] for unit tests. To run the tests, execute the following command in the top-level application directory:\n\n``` bash\n$ make test\n```\n\nAll new feature development should have corresponding unit tests to validate correct functionality.\n\n\n### Test Coverage\n\nThis repository uses [Istanbul][istanbul] as its code coverage tool. To generate a test coverage report, execute the following command in the top-level application directory:\n\n``` bash\n$ make test-cov\n```\n\nIstanbul creates a `./reports/coverage` directory. To access an HTML version of the report,\n\n``` bash\n$ make view-cov\n```\n\n\n### Browser Support\n\nThis repository uses [Testling][testling] for browser testing. To run the tests in a (headless) local web browser, execute the following command in the top-level application directory:\n\n``` bash\n$ make test-browsers\n```\n\nTo view the tests in a local web browser,\n\n``` bash\n$ make view-browser-tests\n```\n\n<!-- [![browser support][browsers-image]][browsers-url] -->\n\n\n---\n## License\n\n[MIT license](http://opensource.org/licenses/MIT).\n\n\n## Copyright\n\nCopyright &copy; 2016. Athan Reines.\n\n\n[npm-image]: http://img.shields.io/npm/v/utils-indexof.svg\n[npm-url]: https://npmjs.org/package/utils-indexof\n\n[build-image]: http://img.shields.io/travis/kgryte/utils-indexof/master.svg\n[build-url]: https://travis-ci.org/kgryte/utils-indexof\n\n[coverage-image]: https://img.shields.io/codecov/c/github/kgryte/utils-indexof/master.svg\n[coverage-url]: https://codecov.io/github/kgryte/utils-indexof?branch=master\n\n[dependencies-image]: http://img.shields.io/david/kgryte/utils-indexof.svg\n[dependencies-url]: https://david-dm.org/kgryte/utils-indexof\n\n[dev-dependencies-image]: http://img.shields.io/david/dev/kgryte/utils-indexof.svg\n[dev-dependencies-url]: https://david-dm.org/dev/kgryte/utils-indexof\n\n[github-issues-image]: http://img.shields.io/github/issues/kgryte/utils-indexof.svg\n[github-issues-url]: https://github.com/kgryte/utils-indexof/issues\n\n[tape]: https://github.com/substack/tape\n[istanbul]: https://github.com/gotwarlost/istanbul\n[testling]: https://ci.testling.com\n\n[ecma-262]: http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.indexof\n[validate.io-array-like]: https://github.com/validate.io/array-like\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Athan Reines.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/utils-indexof/-/utils-indexof-1.0.0.tgz#20feabf09ef1018b523643e8380e7bc83ec61b5c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/utils-indexof/-/utils-indexof-1.0.0.tgz",
    "hash": "20feabf09ef1018b523643e8380e7bc83ec61b5c",
    "integrity": "sha1-IP6r8J7xAYtSNkPoOA57yD7GG1w=",
    "registry": "npm",
    "packageName": "utils-indexof",
    "cacheIntegrity": "sha512-76QBfRJpn4A0P5uTO1x00x+Yog36w2Pab0n+aT9UfUvVa4l+e8k3p7YwNpDvfQ6+aKGZdxZpxcNotNS4YjFcyg== sha1-IP6r8J7xAYtSNkPoOA57yD7GG1w="
  },
  "registry": "npm",
  "hash": "20feabf09ef1018b523643e8380e7bc83ec61b5c"
}