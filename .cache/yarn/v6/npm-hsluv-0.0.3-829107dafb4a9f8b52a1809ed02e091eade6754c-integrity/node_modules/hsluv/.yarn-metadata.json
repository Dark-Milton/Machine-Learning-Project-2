{
  "manifest": {
    "name": "hsluv",
    "description": "Human-friendly HSL",
    "keywords": [
      "color",
      "color space",
      "CIE",
      "RGB",
      "HSL",
      "HSLuv",
      "HPLuv"
    ],
    "version": "0.0.3",
    "author": {
      "name": "Alexei Boronine",
      "email": "alexei@boronine.com"
    },
    "license": "MIT",
    "main": "hsluv.js",
    "files": [
      "hsluv.js"
    ],
    "repository": {
      "type": "git",
      "url": "http://github.com/hsluv/hsluv.git"
    },
    "homepage": "http://www.hsluv.org/",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-hsluv-0.0.3-829107dafb4a9f8b52a1809ed02e091eade6754c-integrity/node_modules/hsluv/package.json",
    "readmeFilename": "README.md",
    "readme": "# HSL<sub>uv</sub> - Human-friendly HSL\n\n## Installation\n\nClient-side: download [the latest hsluv.min.js](https://github.com/hsluv/hsluv/tree/master/javascript/dist).\n\nOnce this module is loaded in the browser, you can access it via the\nglobal ``window.hsluv``.\n\nServer-side: ``npm install hsluv``.\n\n## Usage\n\nMost functions take tuples, ie: Javascript arrays with three elements.  Make sure you are using\n`func([a,b,c])` and not `func(a,b,c)`. If you are getting NaN for output then this is probably\nthe problem.\n\n**hsluvToHex([hue, saturation, lightness])**\n\n*hue* is a number between 0 and 360, *saturation* and *lightness* are\nnumbers between 0 and 100. This function returns the resulting color as\na hex string.\n\n**hsluvToRgb([hue, saturation, lightness])**\n\nLike above, but returns an array of 3 numbers between 0 and 1, for the\nr, g, and b channel.\n\n**hexToHsluv(hex)**\n\nTakes a hex string and returns the HSLuv color as array that contains\nthe hue (0-360), saturation (0-100) and lightness (0-100) channel.\n_Note:_ The result can have rounding errors. For example saturation can\nbe 100.00000000000007\n\n**rgbToHsluv([red, green, blue])**\n\nLike above, but *red*, *green* and *blue* are passed as numbers between\n0 and 1.\n\nUse **hpluvToHex**, **hpluvToRgb**, **hexToHpluv** and **rgbToHpluv** for\nthe pastel variant (HPLuv). Note that HPLuv does not contain all the colors\nof RGB, so converting arbitrary RGB to it may generate invalid HPLuv colors.\n\nFor advance use cases, additional functions are avalible:\n\n**hsluvToLch**, **lchToHsluv**\n\n**hpluvToLch**, **lchToHpluv**\n\n**rgbToXyz**, **xyzToRgb**\n\n**rgbToLch**, **lchToRgb**\n\n**luvToXyz**, **xyzToLuv**\n\n**lchToLuv**, **luvToLch**\n\nAlso available for [Stylus](http://stylus-lang.com/). See\n[here](https://github.com/hsluv/hsluv-stylus).\n\n## Changelog\n\n### 0.0.3\n\n- Expose intermediate functions in the public API.\n\n### 0.0.2\n\n- Improve packaging and minification.\n\n### 0.0.1\n\n- Initial release under the name HSLuv. Old releases can be found [here](https://www.npmjs.com/package/husl).\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hsluv/-/hsluv-0.0.3.tgz#829107dafb4a9f8b52a1809ed02e091eade6754c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hsluv/-/hsluv-0.0.3.tgz",
    "hash": "829107dafb4a9f8b52a1809ed02e091eade6754c",
    "integrity": "sha1-gpEH2vtKn4tSoYCe0C4JHq3mdUw=",
    "registry": "npm",
    "packageName": "hsluv",
    "cacheIntegrity": "sha512-08iL2VyCRbkQKBySkSh6m8zMUa3sADAxGVWs3Z1aPcUkTJeK0ETG4Fc27tEmQBGUAXZjIsXOZqBvacuVNSC/fQ== sha1-gpEH2vtKn4tSoYCe0C4JHq3mdUw="
  },
  "registry": "npm",
  "hash": "829107dafb4a9f8b52a1809ed02e091eade6754c"
}