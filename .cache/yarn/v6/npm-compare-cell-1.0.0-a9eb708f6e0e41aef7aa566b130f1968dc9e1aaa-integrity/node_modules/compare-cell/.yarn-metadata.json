{
  "manifest": {
    "name": "compare-cell",
    "version": "1.0.0",
    "description": "An ordering for sets of integers",
    "main": "compare.js",
    "dependencies": {},
    "devDependencies": {
      "shuffle-array": "0.1.0",
      "tape": "^4.0.0"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mikolalysenko/compare-cells.git"
    },
    "keywords": [
      "order",
      "cell",
      "comparison",
      "sequence",
      "sorting",
      "unordered",
      "simplicial",
      "complex",
      "graph",
      "network",
      "mesh",
      "topology"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mikolalysenko/compare-cells/issues"
    },
    "homepage": "https://github.com/mikolalysenko/compare-cells",
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-compare-cell-1.0.0-a9eb708f6e0e41aef7aa566b130f1968dc9e1aaa-integrity/node_modules/compare-cell/package.json",
    "readmeFilename": "README.md",
    "readme": "compare-cell\n============\nCompares two unordered integer sequences to test if they contain the same elements. This can be used to implement various algorithms for unoriented simplicial complexes.\n\nFor more information, see the following blog post:\n\n[Comparing sequences without sorting](http://0fps.net/2013/01/24/comparing-sequences-without-sorting/)\n\n# Example\n\n```javascript\nvar compareCells = require('compare-cell')\nvar bsearch = require('binary-search-bounds')\n\n//Create a list of triangles defined by indexed faces\nvar triangles = [\n  [1, 0, 2],\n  [2, 1, 3],\n  [3, 4, 5],\n  [5, 6, 7]\n]\n\n//Sort triangles\ntriangles.sort(compareCells)\n\n//Now we can test if various cells are contained in the list in O(log n)\nconsole.log(bsearch.eq(triangles, [2, 1, 0], compareCells) >= 0)\nconsole.log(bsearch.eq(triangles, [3, 5, 7], compareCells) >= 0)\n```\n\n# API\n\n#### `var d = require('compare-cells')(a, b)`\nTests if two unordered lists contain the same elements.\n\n* `a, b` are arrays of integers\n\n**Returns** An order function which tests if `a` comes before or after `b`.  The value is `0` if they are equal.\n\n# License\n(c) 2015 Mikola Lysenko. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2015 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/compare-cell/-/compare-cell-1.0.0.tgz#a9eb708f6e0e41aef7aa566b130f1968dc9e1aaa",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/compare-cell/-/compare-cell-1.0.0.tgz",
    "hash": "a9eb708f6e0e41aef7aa566b130f1968dc9e1aaa",
    "integrity": "sha1-qetwj24OQa73qlZrEw8ZaNyeGqo=",
    "registry": "npm",
    "packageName": "compare-cell",
    "cacheIntegrity": "sha512-uNIkjiNLZLhdCgouF39J+W04R7oP1vwrNME4vP2b2/bAa6PHOj+h8yXu52uPjPTKs5RatvqNsDVwEN7Yp19vNA== sha1-qetwj24OQa73qlZrEw8ZaNyeGqo="
  },
  "registry": "npm",
  "hash": "a9eb708f6e0e41aef7aa566b130f1968dc9e1aaa"
}