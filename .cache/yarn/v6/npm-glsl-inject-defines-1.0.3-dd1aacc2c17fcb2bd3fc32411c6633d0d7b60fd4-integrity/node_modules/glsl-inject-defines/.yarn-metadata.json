{
  "manifest": {
    "name": "glsl-inject-defines",
    "version": "1.0.3",
    "description": "injects a #define statement into a shader source",
    "main": "string.js",
    "license": "MIT",
    "scripts": {
      "test": "node test/test.js | faucet"
    },
    "author": {
      "name": "Matt DesLauriers",
      "email": "dave.des@gmail.com",
      "url": "http://github.com/mattdesl"
    },
    "dependencies": {
      "glsl-token-inject-block": "^1.0.0",
      "glsl-token-string": "^1.0.1",
      "glsl-tokenizer": "^2.0.2"
    },
    "devDependencies": {
      "faucet": "0.0.1",
      "tape": "^4.0.0"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mattdesl/glsl-inject-defines.git"
    },
    "keywords": [
      "ecosystem:stackgl",
      "inject",
      "define",
      "shader",
      "stackgl",
      "webgl",
      "shader",
      "glsl"
    ],
    "homepage": "https://github.com/mattdesl/glsl-inject-defines",
    "bugs": {
      "url": "https://github.com/mattdesl/glsl-inject-defines/issues"
    },
    "_registry": "npm",
    "_loc": "/home/jupyter/.cache/yarn/v6/npm-glsl-inject-defines-1.0.3-dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4-integrity/node_modules/glsl-inject-defines/package.json",
    "readmeFilename": "README.md",
    "readme": "# glsl-inject-defines\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nSafely inject `#define` statements into a shader source. \n\nIf the shader contains any `#version` or `#extension` statements, the defines are added after them. \n\n## Example\n\n```glsl\n// Your cool shader\n#version 330\n#extension GL_OES_standard_derivatives : enable\n\nvoid main() {\n  #ifdef BLUE\n    gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\n  #else\n    gl_FragColor = vec4(0.0);\n  #endif\n}\n```\n\nYou can process it at runtime, like so:\n\n```js\nvar injectDefines = require('glsl-inject-defines')\nvar fs = require('fs')\n\nvar source = fs.readFileSync(__dirname + '/shader.glsl', 'utf8')\n\nvar transformed = injectDefines(source, {\n  PI: 3.14,\n  BLUE: ''\n})\nconsole.log(transformed)\n```\n\nThe resulting shader:\n\n```glsl\n// Your cool shader\n#version 330\n#extension GL_OES_standard_derivatives : enable\n#define PI 3.14\n#define BLUE \n\nvoid main() {\n  #ifdef BLUE\n    gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\n  #else\n    gl_FragColor = vec4(0.0);\n  #endif\n}\n```\n\nWorks in the browser with browserify and [glslify](https://www.npmjs.com/package/glslify).\n\n## Install\n\n```sh\nnpm install glsl-inject-defines\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/glsl-inject-defines.png)](https://www.npmjs.com/package/glsl-inject-defines)\n\n#### `newSource = injectDefines(source, defines)`\n\nInjects the set of `defines`, an object with `<name, value>` pairs that will get turned into strings for the shader source.\n\nReturns the transformed source, with defines injected after extension and version statements.\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/stackgl/glsl-inject-defines/blob/master/LICENSE.md) for details.\n",
    "licenseText": "The MIT License (MIT)\n=====================\n\nCopyright (c) 2014 [stackgl](http://github.com/stackgl/) contributors\n\n*stackgl contributors listed at <https://github.com/stackgl/contributing/blob/master/CONTRIBUTING.md#contributors>*\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/glsl-inject-defines/-/glsl-inject-defines-1.0.3.tgz#dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/glsl-inject-defines/-/glsl-inject-defines-1.0.3.tgz",
    "hash": "dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4",
    "integrity": "sha1-3RqswsF/yyvT/DJBHGYz0Ne2D9Q=",
    "registry": "npm",
    "packageName": "glsl-inject-defines",
    "cacheIntegrity": "sha512-W49jIhuDtF6w+7wCMcClk27a2hq8znvHtlGnrYkSWEr8tHe9eA2dcnohlcAmxLYBSpSSdzOkRdyPTrx9fw49+A== sha1-3RqswsF/yyvT/DJBHGYz0Ne2D9Q="
  },
  "registry": "npm",
  "hash": "dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4"
}